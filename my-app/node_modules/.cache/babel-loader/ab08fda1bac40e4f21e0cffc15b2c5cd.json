{"ast":null,"code":"import axios from '../config/axios';\nimport Swal from 'sweetalert2';\nimport { startUpdateProduct } from './product';\n\nconst getStocks = stocks => {\n  return {\n    type: 'STOCKS_LIST',\n    payload: stocks\n  };\n};\n\nconst addStock = stock => {\n  return {\n    type: 'ADD_STOCK',\n    payload: stock\n  };\n};\n\nconst updateStock = data => {\n  return {\n    type: 'UPDATE_STOCK',\n    payload: data\n  };\n};\n\nconst removeStock = id => {\n  return {\n    type: 'REMOVE_STOCK',\n    payload: id\n  };\n};\n\nexport const getStocksList = () => {\n  return dispatch => {\n    axios.get('/stocks').then(response => {\n      // console.log(response)\n      if (response.data) {\n        dispatch(getStocks(response.data));\n      }\n    }).catch(err => {\n      console.log('error stocks', err); // history.push('/')\n    });\n  };\n};\nexport const startAddStock = (data, product) => {\n  return dispatch => {\n    axios.post(`/stocks`, data, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(res => {\n      if (res.data.errors) {\n        Swal.fire({\n          type: 'error',\n          text: \"Check the fileds\"\n        });\n      } else {\n        const stock = res.data;\n        dispatch(addStock(stock));\n        product.stock = stock._id;\n        dispatch(startUpdateProduct(product._id, product));\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};\nexport const UpdateStockQtyPurchase = (id, data, history) => {\n  return dispatch => {\n    axios.get(`/stocks/${id}`).then(response => {\n      //console.log(response)\n      return response.data;\n    }).then(stock => {\n      //console.log('stock value', stock);\n      data.quantity += stock.quantity;\n      axios.put(`/stocks/edit/${id}`, data, {\n        headers: {\n          'x-auth': localStorage.getItem('authToken')\n        }\n      }).then(res => {\n        if (res.data.errors) {\n          Swal.fire({\n            type: 'error',\n            text: \"Check the fileds\"\n          });\n        } else {\n          //console.log(\"called\", res.data);\n          dispatch(updateStock(res.data._id, res.data)); // history.push('/stocks')\n          // window.location.reload()\n        }\n      }).catch(err => {\n        Swal.fire({\n          type: 'error',\n          text: err\n        });\n      });\n    }).catch(err => {\n      console.log('error stocks', err); // history.push('/')\n    });\n  };\n};\nexport const UpdateStockQtySell = (id, data, history) => {\n  return dispatch => {\n    axios.get(`/stocks/${id}`).then(response => {\n      //console.log(response)\n      return response.data;\n    }).then(stock => {\n      //console.log('stock value', stock);\n      data.quantity = stock.quantity - data.quantity;\n      axios.put(`/stocks/edit/${id}`, data, {\n        headers: {\n          'x-auth': localStorage.getItem('authToken')\n        }\n      }).then(res => {\n        if (res.data.errors) {\n          Swal.fire({\n            type: 'error',\n            text: \"Check the fileds\"\n          });\n        } else {\n          //console.log(\"called\", res.data);\n          dispatch(updateStock(res.data)); // history.push('/stocks')\n          // window.location.reload()\n        }\n      }).catch(err => {\n        Swal.fire({\n          type: 'error',\n          text: err\n        });\n      });\n    }).catch(err => {\n      console.log('error stocks', err); // history.push('/')\n    });\n  };\n};\nexport const startRemoveStock = id => {\n  return dispatch => {\n    axios.delete(`/stocks/${id}`, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(res => {\n      if (res.data.errors) {\n        Swal.fire({\n          type: 'error',\n          text: \"Check the fields\"\n        });\n      } else {\n        const stock = res.data;\n        dispatch(removeStock(stock));\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/actions/stock.js"],"names":["axios","Swal","startUpdateProduct","getStocks","stocks","type","payload","addStock","stock","updateStock","data","removeStock","id","getStocksList","dispatch","get","then","response","catch","err","console","log","startAddStock","product","post","headers","localStorage","getItem","res","errors","fire","text","_id","UpdateStockQtyPurchase","history","quantity","put","UpdateStockQtySell","startRemoveStock","delete"],"mappings":"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","sourcesContent":["import axios from '../config/axios'\nimport Swal from 'sweetalert2'\nimport { startUpdateProduct } from './product'\nconst getStocks = (stocks) => {\n    return {\n        type: 'STOCKS_LIST', payload: stocks\n    }\n}\nconst addStock = (stock)=>{\n    return {\n        type: 'ADD_STOCK',payload: stock\n    }\n}\nconst updateStock = (data)=>{\n    return {\n        type: 'UPDATE_STOCK',payload: data\n    }\n}\nconst removeStock = (id)=>{\n    return {\n        type: 'REMOVE_STOCK',payload: id\n    }\n}\nexport const getStocksList = () => {\n    return (dispatch) => {\n        axios.get('/stocks')\n            .then(response => {\n                // console.log(response)\n                if (response.data) {\n                    dispatch(getStocks(response.data))\n                }\n            })\n            .catch(err => {\n                console.log('error stocks', err)\n                // history.push('/')\n            })\n    }\n}\nexport const startAddStock = (data, product) => {\n    return (dispatch) => {\n        axios.post(`/stocks`,data,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(res => {\n            if(res.data.errors){\n                Swal.fire({\n                    type: 'error',\n                    text: \"Check the fileds\"\n                })\n            }else{\n                const stock = res.data;\n                dispatch(addStock(stock));\n                product.stock = stock._id;\n                dispatch(startUpdateProduct(product._id, product));\n            }\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n            \n        })\n    }\n}\nexport const UpdateStockQtyPurchase = (id,data,history) => {\n    return (dispatch) => {\n        axios.get(`/stocks/${id}`)\n        .then(response => {\n            //console.log(response)\n           return response.data\n        })\n        .then(stock => {\n            //console.log('stock value', stock);\n            data.quantity += stock.quantity;\n            axios.put(`/stocks/edit/${id}`,data,{\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n            .then(res => {\n                if(res.data.errors){\n                    Swal.fire({\n                        type: 'error',\n                        text: \"Check the fileds\"\n                    })\n                }else{\n                    //console.log(\"called\", res.data);\n                    dispatch(updateStock(res.data._id,res.data))\n                    // history.push('/stocks')\n                    // window.location.reload()\n                }\n            })\n            .catch(err => {\n                Swal.fire({\n                    type: 'error',\n                    text: err\n                })\n            })\n        })\n        .catch(err => {\n            console.log('error stocks', err)\n            // history.push('/')\n        })\n    }\n}\nexport const UpdateStockQtySell = (id,data,history) => {\n    return (dispatch) => {\n        axios.get(`/stocks/${id}`)\n        .then(response => {\n            //console.log(response)\n           return response.data\n        })\n        .then(stock => {\n            //console.log('stock value', stock);\n            data.quantity = stock.quantity - data.quantity;\n            axios.put(`/stocks/edit/${id}`,data,{\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n            .then(res => {\n                if(res.data.errors){\n                    Swal.fire({\n                        type: 'error',\n                        text: \"Check the fileds\"\n                    })\n                }else{\n                    //console.log(\"called\", res.data);\n                    dispatch(updateStock(res.data))\n                    // history.push('/stocks')\n                    // window.location.reload()\n                }\n            })\n            .catch(err => {\n                Swal.fire({\n                    type: 'error',\n                    text: err\n                })\n            })\n        })\n        .catch(err => {\n            console.log('error stocks', err)\n            // history.push('/')\n        })\n    }\n}\n\nexport const startRemoveStock = (id) => {\n    return (dispatch) => {\n        axios.delete(`/stocks/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(res => {\n            if(res.data.errors){\n                Swal.fire({\n                    type: 'error',\n                    text: \"Check the fields\"\n                })\n            }else{\n                const stock = res.data;\n                dispatch(removeStock(stock));\n            }\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n            \n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}