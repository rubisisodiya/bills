{"ast":null,"code":"import axios from '../config/axios';\nimport Swal from 'sweetalert2';\nimport { startListProducts } from './product'; //import { getStocksList, UpdateStockQtyPurchase } from './stock'\n\nconst getPurchase = purchases => {\n  return {\n    type: 'PURCHASES_LIST',\n    payload: purchases\n  };\n};\n\nconst addPurchase = purchase => {\n  return {\n    type: \"ADD_PURCHASE\",\n    payload: purchase\n  };\n};\n\nconst updateStockFromPurchase = purchase => {\n  return {\n    type: \"PURCHASE_STOCK_UPDATE\",\n    payload: purchase\n  };\n};\n\nexport const getPurchasesList = () => {\n  return dispatch => {\n    axios.get('/purchases').then(response => {\n      // console.log(response)\n      if (response.data) {\n        dispatch(getPurchase(response.data));\n      }\n    }).catch(err => {\n      console.log('error purchases', err); // history.push('/')\n    });\n  };\n};\nexport const startAddPurchase = (data, regEnable) => {\n  return dispatch => {\n    axios.post('/purchases', data).then(response => {\n      // console.log(response)\n      if (response.data.errors) {\n        Swal.fire({\n          type: 'info',\n          text: \"Check the fields\"\n        });\n      } else {\n        const purchase = response.data; // console.log(purchase,'<----[NEW PURCHASE]')\n\n        dispatch(addPurchase(purchase));\n        regEnable();\n        dispatch(startListProducts());\n        purchase.products.map(product => {\n          dispatch(updateStockFromPurchase(product));\n          return null;\n        });\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/actions/purchase.js"],"names":["axios","Swal","startListProducts","getPurchase","purchases","type","payload","addPurchase","purchase","updateStockFromPurchase","getPurchasesList","dispatch","get","then","response","data","catch","err","console","log","startAddPurchase","regEnable","post","errors","fire","text","products","map","product"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,iBAAT,QAAkC,WAAlC,C,CACA;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAE,gBADH;AACqBC,IAAAA,OAAO,EAAEF;AAD9B,GAAP;AAGH,CAJD;;AAKA,MAAMG,WAAW,GAAEC,QAAD,IAAY;AAC1B,SAAO;AACHH,IAAAA,IAAI,EAAE,cADH;AACmBC,IAAAA,OAAO,EAAEE;AAD5B,GAAP;AAGH,CAJD;;AAMA,MAAMC,uBAAuB,GAAID,QAAD,IAAc;AAC1C,SAAO;AACHH,IAAAA,IAAI,EAAE,uBADH;AAC4BC,IAAAA,OAAO,EAAEE;AADrC,GAAP;AAGH,CAJD;;AAMA,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClC,SAAQC,QAAD,IAAc;AACjBX,IAAAA,KAAK,CAACY,GAAN,CAAU,YAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA,UAAIA,QAAQ,CAACC,IAAb,EAAmB;AACfJ,QAAAA,QAAQ,CAACR,WAAW,CAACW,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACH;AACJ,KANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAA/B,EADU,CAEV;AACH,KAVL;AAWH,GAZD;AAaH,CAdM;AAeP,OAAO,MAAMG,gBAAgB,GAAG,CAACL,IAAD,EAAMM,SAAN,KAAoB;AAChD,SAAQV,QAAD,IAAc;AACjBX,IAAAA,KAAK,CAACsB,IAAN,CAAW,YAAX,EAAwBP,IAAxB,EACKF,IADL,CACUC,QAAQ,IAAI;AACd;AACA,UAAGA,QAAQ,CAACC,IAAT,CAAcQ,MAAjB,EAAwB;AACpBtB,QAAAA,IAAI,CAACuB,IAAL,CAAU;AACNnB,UAAAA,IAAI,EAAE,MADA;AAENoB,UAAAA,IAAI,EAAE;AAFA,SAAV;AAIH,OALD,MAKK;AACD,cAAMjB,QAAQ,GAAGM,QAAQ,CAACC,IAA1B,CADC,CAED;;AACAJ,QAAAA,QAAQ,CAACJ,WAAW,CAACC,QAAD,CAAZ,CAAR;AACAa,QAAAA,SAAS;AACTV,QAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACAM,QAAAA,QAAQ,CAACkB,QAAT,CAAkBC,GAAlB,CAAuBC,OAAO,IAAI;AAC9BjB,UAAAA,QAAQ,CAACF,uBAAuB,CAACmB,OAAD,CAAxB,CAAR;AACA,iBAAO,IAAP;AACH,SAHD;AAIH;AACJ,KAnBL,EAoBKZ,KApBL,CAoBWC,GAAG,IAAI;AACVhB,MAAAA,IAAI,CAACuB,IAAL,CAAU;AACNnB,QAAAA,IAAI,EAAE,OADA;AAENoB,QAAAA,IAAI,EAAER;AAFA,OAAV;AAIH,KAzBL;AA0BH,GA3BD;AA4BH,CA7BM","sourcesContent":["import axios from '../config/axios'\nimport Swal from 'sweetalert2'\nimport { startListProducts } from './product'\n//import { getStocksList, UpdateStockQtyPurchase } from './stock'\n\nconst getPurchase = (purchases) => {\n    return {\n        type: 'PURCHASES_LIST', payload: purchases\n    }\n}\nconst addPurchase=(purchase)=>{\n    return {\n        type: \"ADD_PURCHASE\", payload: purchase\n    }\n}\n\nconst updateStockFromPurchase = (purchase) => {\n    return {\n        type: \"PURCHASE_STOCK_UPDATE\", payload: purchase \n    }\n}\n\nexport const getPurchasesList = () => {\n    return (dispatch) => {\n        axios.get('/purchases')\n            .then(response => {\n                // console.log(response)\n                if (response.data) {\n                    dispatch(getPurchase(response.data))\n                }\n            })\n            .catch(err => {\n                console.log('error purchases', err)\n                // history.push('/')\n            })\n    }\n}\nexport const startAddPurchase = (data,regEnable) => {\n    return (dispatch) => {\n        axios.post('/purchases',data)\n            .then(response => {\n                // console.log(response)\n                if(response.data.errors){\n                    Swal.fire({\n                        type: 'info',\n                        text: \"Check the fields\"\n                    })\n                }else{\n                    const purchase = response.data;\n                    // console.log(purchase,'<----[NEW PURCHASE]')\n                    dispatch(addPurchase(purchase))\n                    regEnable()\n                    dispatch(startListProducts())\n                    purchase.products.map( product => {\n                        dispatch(updateStockFromPurchase(product))\n                        return null\n                    })\n                }\n            })\n            .catch(err => {\n                Swal.fire({\n                    type: 'error',\n                    text: err\n                })\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}