{"ast":null,"code":"import axios from '../config/axios';\n\nconst loginUser = user => {\n  return {\n    type: 'LOGIN_USER',\n    payload: user\n  };\n};\n\nconst logoutUser = () => {\n  return {\n    type: 'LOGOUT_USER'\n  };\n};\n\nconst failedLogin = notice => {\n  return {\n    type: 'LOGIN_FAILURE',\n    payload: notice\n  };\n};\n\nexport const setActiveBusiness = id => {\n  return {\n    type: 'ACTIVE_BUSINESS',\n    payload: id\n  };\n};\nexport const startCheckUserAuth = () => {\n  return (dispatch, getState) => {\n    axios.get('/users/check-login').then(response => {\n      // console.log(response)\n      if (response.data.username) {\n        const user = {\n          username: response.data.username,\n          role: response.data.role\n        };\n        dispatch(loginUser(user));\n      }\n    }).catch(err => {\n      console.log('check login', err); // history.push('/')\n    });\n  };\n};\nexport const startPostUserLogin = (formData, history) => {\n  return dispatch => {\n    axios.post('/users/login', formData).then(response => {\n      if (response.data.notice) {\n        const notice = response.data.notice;\n        dispatch(failedLogin(notice));\n      } else {\n        // console.log(response)\n        const token = response.data.token;\n        const user = {\n          username: response.data.userName,\n          role: response.data.userName\n        };\n        localStorage.setItem('authToken', token);\n        dispatch(loginUser(user));\n        history.push('/dashboard');\n      }\n    }).catch(err => {\n      console.log('Login error', err);\n    });\n  };\n};\nexport const startPostUserLogout = formData => {\n  return dispatch => {\n    axios.delete('/users/logout', formData).then(() => {\n      localStorage.clear();\n      dispatch(logoutUser());\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }).catch(err => {\n      console.log('Logout error', err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/actions/user.js"],"names":["axios","loginUser","user","type","payload","logoutUser","failedLogin","notice","setActiveBusiness","id","startCheckUserAuth","dispatch","getState","get","then","response","data","username","role","catch","err","console","log","startPostUserLogin","formData","history","post","token","userName","localStorage","setItem","push","startPostUserLogout","delete","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH;AACiBC,IAAAA,OAAO,EAAEF;AAD1B,GAAP;AAGH,CAJD;;AAMA,MAAMG,UAAU,GAAG,MAAM;AACrB,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMG,WAAW,GAAIC,MAAD,IAAY;AAC5B,SAAO;AACHJ,IAAAA,IAAI,EAAE,eADH;AACoBC,IAAAA,OAAO,EAAEG;AAD7B,GAAP;AAGH,CAJD;;AAMA,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AACrC,SAAO;AACHN,IAAAA,IAAI,EAAE,iBADH;AACsBC,IAAAA,OAAO,EAAEK;AAD/B,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BZ,IAAAA,KAAK,CAACa,GAAN,CAAU,oBAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA,UAAIA,QAAQ,CAACC,IAAT,CAAcC,QAAlB,EAA4B;AACxB,cAAMf,IAAI,GAAG;AACTe,UAAAA,QAAQ,EAAEF,QAAQ,CAACC,IAAT,CAAcC,QADf;AAETC,UAAAA,IAAI,EAAEH,QAAQ,CAACC,IAAT,CAAcE;AAFX,SAAb;AAIAP,QAAAA,QAAQ,CAACV,SAAS,CAACC,IAAD,CAAV,CAAR;AACH;AACJ,KAVL,EAWKiB,KAXL,CAWWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B,EADU,CAEV;AACH,KAdL;AAeH,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACrD,SAAOd,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAAC0B,IAAN,CAAW,cAAX,EAA2BF,QAA3B,EACKV,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcT,MAAlB,EAA0B;AACtB,cAAMA,MAAM,GAAGQ,QAAQ,CAACC,IAAT,CAAcT,MAA7B;AACAI,QAAAA,QAAQ,CAACL,WAAW,CAACC,MAAD,CAAZ,CAAR;AACH,OAHD,MAGO;AACH;AACA,cAAMoB,KAAK,GAAGZ,QAAQ,CAACC,IAAT,CAAcW,KAA5B;AACA,cAAMzB,IAAI,GAAG;AACTe,UAAAA,QAAQ,EAAEF,QAAQ,CAACC,IAAT,CAAcY,QADf;AAETV,UAAAA,IAAI,EAAEH,QAAQ,CAACC,IAAT,CAAcY;AAFX,SAAb;AAIAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,KAAlC;AACAhB,QAAAA,QAAQ,CAACV,SAAS,CAACC,IAAD,CAAV,CAAR;AACAuB,QAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACH;AACJ,KAhBL,EAiBKZ,KAjBL,CAiBWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACH,KAnBL;AAoBH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMY,mBAAmB,GAAIR,QAAD,IAAc;AAC7C,SAAOb,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAACiC,MAAN,CAAa,eAAb,EAA8BT,QAA9B,EACKV,IADL,CACU,MAAM;AACRe,MAAAA,YAAY,CAACK,KAAb;AACAvB,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAM,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KALL,EAMKgB,KANL,CAMWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;AACH,KARL;AASH,GAVD;AAWH,CAZM","sourcesContent":["import axios from '../config/axios'\n\nconst loginUser = (user) => {\n    return {\n        type: 'LOGIN_USER', payload: user\n    }\n}\n\nconst logoutUser = () => {\n    return {\n        type: 'LOGOUT_USER'\n    }\n}\n\nconst failedLogin = (notice) => {\n    return {\n        type: 'LOGIN_FAILURE', payload: notice\n    }\n}\n\nexport const setActiveBusiness = (id) => {\n    return {\n        type: 'ACTIVE_BUSINESS', payload: id\n    }\n}\n\nexport const startCheckUserAuth = () => {\n    return (dispatch, getState) => {\n        axios.get('/users/check-login')\n            .then(response => {\n                // console.log(response)\n                if (response.data.username) {\n                    const user = {\n                        username: response.data.username,\n                        role: response.data.role\n                    }\n                    dispatch(loginUser(user))\n                }\n            })\n            .catch(err => {\n                console.log('check login', err)\n                // history.push('/')\n            })\n    }\n}\n\nexport const startPostUserLogin = (formData, history) => {\n    return dispatch => {\n        axios.post('/users/login', formData)\n            .then(response => {\n                if (response.data.notice) {\n                    const notice = response.data.notice\n                    dispatch(failedLogin(notice))\n                } else {\n                    // console.log(response)\n                    const token = response.data.token\n                    const user = {\n                        username: response.data.userName,\n                        role: response.data.userName\n                    }\n                    localStorage.setItem('authToken', token)\n                    dispatch(loginUser(user))\n                    history.push('/dashboard')\n                }\n            })\n            .catch(err => {\n                console.log('Login error', err)\n            })\n    }\n}\n\nexport const startPostUserLogout = (formData) => {\n    return dispatch => {\n        axios.delete('/users/logout', formData)\n            .then(() => {\n                localStorage.clear()\n                dispatch(logoutUser())\n                dispatch({type: 'LOGOUT'})\n            })\n            .catch(err => {\n                console.log('Logout error', err)\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}