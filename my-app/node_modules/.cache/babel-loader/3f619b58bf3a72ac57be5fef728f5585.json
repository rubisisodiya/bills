{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rubi Singh\\\\meanstark\\\\nodeexpress\\\\billing\\\\my-app\\\\src\\\\components\\\\Purchases\\\\showPurchase.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getPurchasesList } from '../../actions/purchase';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom'; //import html2pdf from 'html2pdf.js'\n\nfunction Tabular(props) {\n  const {\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    style: {\n      borderCollapse: 'collapse'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, data.map((product, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: product.product._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }\n    }, product.product.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 27\n      }\n    }, product.product.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }\n    }, product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }\n    }, product.price), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }\n    }, product.price * product.quantity));\n  }))));\n} // function printPageArea(areaID){\n//   var printContent = document.getElementById(areaID);\n//   var WinPrint = window.open('', '', 'width=900,height=650');\n//   WinPrint.document.write(printContent.innerHTML);\n//   WinPrint.document.close();\n//   WinPrint.focus();\n//   WinPrint.print();\n//   setTimeout(() => {\n//         WinPrint.close();\n//     }, 2000);\n// }\n// function downloadAsPdf(areaID,id){\n//   var printContent = document.getElementById(areaID)\n//   var opt = {\n//       margin:       1,\n//       filename:     `invoice-${id}.pdf`,\n//       image:        { type: 'jpeg', quality: 1 },\n//       html2canvas:  { scale: 4 },\n//       jsPDF:        { unit: 'cm', format: 'A4', orientation: 'portrait' }\n//   };\n//   html2pdf().set(opt).from(printContent).save()\n// }\n\n\nclass PurchaseShow extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(getPurchasesList());\n  }\n\n  render() {\n    //console.log(this.props.purchase)\n    const purchase = this.props.purchase;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Purchase Info\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      id: \"purchase\",\n      style: {\n        marginLeft: '60px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, purchase && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, purchase.invoice, \" - \", moment(purchase.date).format('LLL'))), /*#__PURE__*/React.createElement(Tabular, {\n      data: purchase.products,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detailContain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"tax: \", purchase.tax, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, \"Other charges: \", purchase.otherCharges), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"Total: \", purchase.total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"discount: \", purchase.discount, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, \"payMode: \", purchase.payMode), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 'medium'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 68\n      }\n    }, \"Grand Total:\"), \" \", purchase.totalAmount))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/purchases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Back\"));\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    purchase: state.purchases.find(p => p._id === props.match.params.id)\n  };\n};\n\nexport default connect(mapStateToProps)(PurchaseShow);","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/components/Purchases/showPurchase.js"],"names":["React","connect","getPurchasesList","moment","Link","Tabular","props","data","borderCollapse","map","product","i","_id","name","description","quantity","price","PurchaseShow","Component","componentDidMount","dispatch","render","purchase","marginLeft","invoice","date","format","products","tax","otherCharges","total","discount","payMode","fontWeight","fontSize","totalAmount","mapStateToProps","state","purchases","find","p","match","params","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getPurchasesList } from '../../actions/purchase'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n//import html2pdf from 'html2pdf.js'\n\nfunction Tabular(props){\n  const { data } = props\n  return (\n      <div>\n          <table border='1' style={{borderCollapse:'collapse'}}>\n              <thead>\n                  <tr>\n                      <th>#</th>\n                      <th>Name</th>\n                      <th>Description</th>\n                      <th>Quantity</th>\n                      <th>Price</th>\n                      <th>total</th>\n                  </tr>\n              </thead>\n              <tbody>{\n                  data.map((product,i) => {\n                      return (<tr key={product.product._id}>\n                          <td>{i+1}</td>\n                          <td>{product.product.name}</td>\n                          <td>{product.product.description}</td>\n                          <td>{product.quantity}</td>\n                          <td>{product.price}</td>\n                          <td>{product.price*product.quantity}</td>\n                      </tr>)\n                  })\n              }\n              </tbody>\n          </table>\n      </div>\n  )\n}\n\n// function printPageArea(areaID){\n//   var printContent = document.getElementById(areaID);\n//   var WinPrint = window.open('', '', 'width=900,height=650');\n//   WinPrint.document.write(printContent.innerHTML);\n//   WinPrint.document.close();\n//   WinPrint.focus();\n//   WinPrint.print();\n//   setTimeout(() => {\n//         WinPrint.close();\n//     }, 2000);\n// }\n\n// function downloadAsPdf(areaID,id){\n//   var printContent = document.getElementById(areaID)\n//   var opt = {\n//       margin:       1,\n//       filename:     `invoice-${id}.pdf`,\n//       image:        { type: 'jpeg', quality: 1 },\n//       html2canvas:  { scale: 4 },\n//       jsPDF:        { unit: 'cm', format: 'A4', orientation: 'portrait' }\n//   };\n//   html2pdf().set(opt).from(printContent).save()\n// }\n\nclass PurchaseShow extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(getPurchasesList())\n  }\n\n  render() {\n    //console.log(this.props.purchase)\n    const purchase = this.props.purchase\n    return (\n      <>\n        <h2>Purchase Info</h2>\n        <div className='row' id='purchase' style={{marginLeft:'60px'}}>\n          <div className='section'>\n            {purchase && (\n              <>\n                <h5>\n                  <u>{purchase.invoice} - {moment(purchase.date).format('LLL')}</u>\n                </h5>\n                <Tabular data={purchase.products} />\n                <br/>\n                <div className='detailContain'>\n                  <p>tax: {purchase.tax}%</p>\n                  <p>Other charges: {purchase.otherCharges}</p>\n                  <p>Total: {purchase.total}</p>\n                  <p>discount: {purchase.discount}%</p>\n                  <p>payMode: {purchase.payMode}</p>\n                  <p style={{fontWeight:'bold',fontSize:'medium'}}><em>Grand Total:</em> {purchase.totalAmount}</p>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        {/* <button onClick={() => {printPageArea('purchase')}}>Print</button>\n        <button onClick={() => {downloadAsPdf('purchase',purchase.invoice)}}>Download as pdf</button> */}\n        <br/>\n        <Link to='/purchases'>Back</Link>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    purchase: state.purchases.find((p) => p._id === props.match.params.id),\n  }\n}\n\nexport default connect(mapStateToProps)(PurchaseShow)\n"]},"metadata":{},"sourceType":"module"}