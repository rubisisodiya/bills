{"ast":null,"code":"import axios from '../config/axios';\nimport Swal from 'sweetalert2';\nconst getToken = localStorage.getItem('authToken');\n\nconst getCustomers = cus => {\n  return {\n    type: 'CUSTOMERS_LIST',\n    payload: cus\n  };\n};\n\nconst addCustomer = data => {\n  return {\n    type: 'ADD_CUSTOMER',\n    payload: data\n  };\n};\n\nconst updateCustomer = cus => {\n  return {\n    type: 'UPDATE_CUSTOMER',\n    payload: cus\n  };\n};\n\nconst removeCustomer = id => {\n  return {\n    type: 'REMOVE_CUSTOMER',\n    payload: id\n  };\n};\n\nexport const startListCustomers = () => {\n  return dispatch => {\n    axios.get('/customers').then(response => {\n      //console.log(response)\n      if (response.data) {\n        dispatch(getCustomers(response.data));\n      }\n    }).catch(err => {\n      console.log('error customers', err);\n    });\n  };\n};\nexport const startAddCustomer = data => {\n  return dispatch => {\n    axios.post(`/customers`, data, {\n      headers: {\n        'x-auth': getToken\n      }\n    }).then(res => {\n      if (res.data.errors) {\n        Swal.fire({\n          type: 'error',\n          text: \"Check the fields\"\n        });\n      } else {\n        const cus = res.data;\n        dispatch(addCustomer(cus)); //console.log('CUS-ADDED', cus)\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};\nexport const startUpdateCustomer = (id, data) => {\n  return dispatch => {\n    axios.put(`/customers/edit/${id}`, data, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(res => {\n      if (res.data.errors) {\n        Swal.fire({\n          type: 'error',\n          text: \"Check the fields\"\n        });\n      } else {\n        //console.log(res.data,'UPT-CUS')\n        const upCus = res.data;\n        dispatch(updateCustomer(upCus));\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};\nexport const startRemoveCustomer = id => {\n  return dispatch => {\n    axios.delete(`/customers/${id}`, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(res => {\n      //console.log(res, 'DEL-CUS')\n      dispatch(removeCustomer(res.data._id));\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/actions/customer.js"],"names":["axios","Swal","getToken","localStorage","getItem","getCustomers","cus","type","payload","addCustomer","data","updateCustomer","removeCustomer","id","startListCustomers","dispatch","get","then","response","catch","err","console","log","startAddCustomer","post","headers","res","errors","fire","text","startUpdateCustomer","put","upCus","startRemoveCustomer","delete","_id"],"mappings":"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","sourcesContent":["import axios from '../config/axios'\nimport Swal from 'sweetalert2'\nconst getToken = localStorage.getItem('authToken')\n\nconst getCustomers = (cus) => {\n    return {\n        type: 'CUSTOMERS_LIST', payload: cus\n    }\n}\nconst addCustomer = (data)=>{\n    return {\n        type: 'ADD_CUSTOMER',payload: data\n    }\n}\n\nconst updateCustomer = (cus)=>{\n    return {\n        type: 'UPDATE_CUSTOMER',payload: cus\n    }\n}\n\nconst removeCustomer = (id)=>{\n    return {\n        type: 'REMOVE_CUSTOMER',payload: id\n    }\n}\n\n\nexport const startListCustomers = () => {\n    return (dispatch) => {\n        axios.get('/customers')\n            .then(response => {\n                //console.log(response)\n                if (response.data) {\n                    dispatch(getCustomers(response.data))\n                }\n            })\n            .catch(err => {\n                console.log('error customers', err)\n            })\n    }\n}\n\nexport const startAddCustomer = (data) => {\n    return (dispatch) => {\n        axios.post(`/customers`,data,{\n            headers: {\n                'x-auth': getToken\n            }\n        })\n        .then(res => {\n            if(res.data.errors){\n                Swal.fire({\n                    type: 'error',\n                    text: \"Check the fields\"\n                })\n            }else{\n                const cus = res.data;\n                dispatch(addCustomer(cus))\n                //console.log('CUS-ADDED', cus)\n            }\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n            \n        })\n    }\n}\n\nexport const startUpdateCustomer = (id,data) => {\n    return (dispatch) => {\n        axios.put(`/customers/edit/${id}`,data,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(res => {\n            if(res.data.errors){\n                Swal.fire({\n                    type: 'error',\n                    text: \"Check the fields\"\n                })\n            }else{\n                //console.log(res.data,'UPT-CUS')\n                const upCus = res.data\n                dispatch(updateCustomer(upCus))\n            }\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n        })\n    }\n}\n\nexport const startRemoveCustomer = (id) => {\n    return (dispatch) => {\n        axios.delete(`/customers/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(res => {\n            //console.log(res, 'DEL-CUS')\n            dispatch(removeCustomer(res.data._id))\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}