{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rubi Singh\\\\meanstark\\\\nodeexpress\\\\billing\\\\my-app\\\\src\\\\components\\\\Purchases\\\\FormPurchase.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { object, string, number, array } from 'yup';\nimport Modal from 'react-modal';\nimport modalStyles from '../../config/modalCss';\nimport Add from '@material-ui/icons/Add';\nimport { Button, TextField, Box, FormGroup, FormControl, Select, MenuItem, InputLabel, IconButton, Tooltip } from '@material-ui/core';\nimport moment from 'moment';\nimport '../../config/FormikForm.css';\nimport DealerAdd from '../AllUsers/Dealers/DealerAdd';\nimport { getStocksList } from '../../actions/stock';\nimport { startAddPurchase } from '../../actions/purchase';\nconst registerSchema = object().shape({\n  quantity: number().positive(),\n  dealer: string().required(),\n  payMode: string().required(),\n  tax: number().required().min(0, 'Must be a positive number'),\n  discount: number().required().min(0, 'Must be a positive number'),\n  otherCharges: number().required().min(0, 'Must be a positive number'),\n  products: array().min(1, 'Billing Cart is empty')\n});\n\nfunction Tabular(props) {\n  const {\n    data,\n    values,\n    setFieldValue,\n    handleRemoveProduct\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    style: {\n      borderCollapse: 'collapse'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, data.map((product, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, product.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, product.price), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, product.price * product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: () => handleRemoveProduct(product.product, values, setFieldValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Remove\")));\n  }))));\n}\n\nfunction FormPurchase(props) {\n  const [tempId, setTempId] = useState('');\n  const [newField, setNewField] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const modalStatus = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const generateTempId = () => {\n    let genId = JSON.stringify(Number(Date.now())).substring(0, 12);\n    setTempId(genId);\n  };\n\n  useEffect(() => {\n    props.dispatch(getStocksList());\n    generateTempId(); // eslint-disable-next-line\n  }, []);\n\n  const productChange = (e, values, setFieldValue) => {\n    const product = props.products.find(product => product._id === e.target.value);\n\n    if (product) {\n      const stock = props.stocks.find(stock => stock.product._id === product._id);\n      setFieldValue('_id', product._id);\n      setFieldValue('price', product.price);\n      setFieldValue('quantity', 1);\n      setFieldValue('name', product.name);\n      setFieldValue('stock', product.stock);\n      setFieldValue('availableStock', stock.quantity);\n      setNewField(false);\n      console.log(product, stock);\n    } else {\n      setFieldValue('_id', tempId);\n      setFieldValue('price', 0);\n      setFieldValue('quantity', 1);\n      setFieldValue('name', '');\n      setFieldValue('stock', 0);\n      setFieldValue('availableStock', 0);\n      setNewField(true);\n    }\n  };\n\n  const addToPurchaseList = (e, values, setFieldValue) => {\n    e.preventDefault();\n    generateTempId(); //console.log(values,setFieldValue)\n\n    if (values._id) {\n      setFieldValue('products', values.products.concat({\n        product: values._id,\n        price: values.price,\n        quantity: values.quantity,\n        stock: values.stock,\n        name: values.name\n      }));\n      setFieldValue('_id', '');\n      setFieldValue('name', '');\n      setFieldValue('price', '');\n      setFieldValue('quantity', '');\n      setFieldValue('stock', '');\n      setFieldValue('availableStock', '');\n      setFieldValue('total', Number(values.total) + Number(values.price) * Number(values.quantity));\n      setFieldValue('totalAmount', Number(values.total) + Number(values.price) * Number(values.quantity));\n    }\n\n    setNewField(false);\n  };\n\n  const handleRemoveProduct = (id, values, setFieldValue) => {\n    const product = values.products.find(p => p.product === id);\n    setFieldValue('total', values.total - product.price * product.quantity);\n    setFieldValue('totalAmount', values.totalAmount - product.price * product.quantity);\n    setFieldValue('products', values.products.filter(product => product.product !== id));\n  };\n\n  const taxBlur = (values, setFieldValue) => {\n    const amount = values.products.map(p => p.price * p.quantity).reduce((a, b) => {\n      return a + b;\n    }, 0);\n    setFieldValue('total', Number(amount) + Number(amount) * Number(values.tax) / 100);\n    setFieldValue('totalAmount', Number(amount) + Number(amount) * Number(values.tax) / 100);\n  };\n\n  const discountBlur = (values, setFieldValue) => {\n    setFieldValue('totalAmount', Number(values.totalAmount) - Number(values.total) * Number(values.discount) / 100);\n  };\n\n  const otherChargesBlur = (values, setFieldValue) => {\n    setFieldValue('totalAmount', Number(values.totalAmount) + Number(values.otherCharges));\n  };\n\n  Modal.setAppElement('#root');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik //enableReinitialize={true}\n  , {\n    initialValues: {\n      products: [],\n      _id: '',\n      stock: '',\n      name: '',\n      price: '',\n      quantity: '',\n      date: moment(Date.now()).format('YYYY-MM-DD'),\n      dealer: '',\n      description: '',\n      total: '',\n      discount: 0,\n      tax: 0,\n      otherCharges: 0,\n      payMode: 'Cash',\n      totalAmount: '',\n      paymentDetails: '',\n      availableStock: '',\n      tempId: tempId\n    },\n    validationSchema: registerSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const regEnable = () => {\n        setSubmitting(false);\n        resetForm();\n      };\n\n      const {\n        products,\n        date,\n        customer,\n        total,\n        paymentDetails,\n        tax,\n        description,\n        otherCharges,\n        payMode,\n        discount,\n        totalAmount\n      } = values;\n      const fd = {\n        products,\n        date,\n        customer,\n        total,\n        paymentDetails,\n        tax,\n        description,\n        otherCharges,\n        payMode,\n        discount,\n        totalAmount\n      };\n      console.log(fd, setSubmitting);\n      props.dispatch(startAddPurchase(fd, regEnable));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting,\n    handleChange,\n    values,\n    errors,\n    touched,\n    isValid,\n    setFieldValue,\n    resetForm\n  }) => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBill-formik\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBill-formik-addProduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"selectProduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"Select Product\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"formBill-formik-select\",\n    labelId: \"selectProduct\",\n    name: \"_id\",\n    value: values._id,\n    onChange: (e, values) => productChange(e, values, setFieldValue),\n    label: \"Select Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, \"Select\")), props.products.map((product, i) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: product._id,\n      value: product._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 31\n      }\n    }, product.name);\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    value: tempId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 27\n    }\n  }, \"Add new product\"))))), newField && /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.username && Boolean(errors.username)}\n  , {\n    type: \"text\",\n    value: values.name,\n    name: \"name\",\n    label: \"New product name\",\n    variant: \"outlined\",\n    as: TextField //helperText={touched.username && errors.username}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.username && Boolean(errors.username)}\n  , {\n    type: \"number\",\n    value: values.price,\n    name: \"price\",\n    label: \"Price\",\n    variant: \"outlined\",\n    as: TextField //helperText={touched.username && errors.username}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 23\n    }\n  }))), !newField && /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: Boolean(errors.availableStock),\n    helperText: errors.availableStock,\n    type: \"number\",\n    name: \"availableStock\",\n    label: \"Available Stock\",\n    variant: \"outlined\",\n    value: values.availableStock,\n    as: TextField,\n    readOnly: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: touched.quantity && Boolean(errors.quantity),\n    helperText: touched.quantity && errors.quantity,\n    type: \"number\",\n    name: \"quantity\",\n    label: \"Buy quantity\",\n    variant: \"outlined\",\n    value: values.quantity,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    className: \"formik-formBill-addProBtn\",\n    onClick: e => addToPurchaseList(e, values, setFieldValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 23\n    }\n  }, \"Add to Purchase\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, !Boolean(errors.products) && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, errors.products), values.products.length > 0 && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 23\n    }\n  }, \"Billing Cart\"), /*#__PURE__*/React.createElement(Tabular, {\n    data: values.products,\n    values: values,\n    setFieldValue: setFieldValue,\n    handleRemoveProduct: handleRemoveProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formik-formBill-makeBill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"date\",\n    name: \"date\",\n    label: \"Date\",\n    variant: \"outlined\",\n    value: values.date,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"selectDealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 31\n    }\n  }, \"Select Dealer\"), /*#__PURE__*/React.createElement(Select, {\n    error: touched.dealer && Boolean(errors.dealer) //helperText={touched.dealer && errors.dealer}\n    ,\n    className: \"formBill-formik-select\",\n    labelId: \"selectDealer\",\n    name: \"dealer\",\n    value: values.dealer,\n    label: \"Select Dealer\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 35\n    }\n  }, \"Select\")), props.dealers.map((dealer, i) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: dealer._id,\n      value: dealer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 37\n      }\n    }, dealer.dealerName);\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    style: modalStyles,\n    isOpen: modalIsOpen // onAfterOpen={this.afterOpenModal}\n    ,\n    onRequestClose: modalStatus,\n    \"aria-labelledBy\": \"Create Category\",\n    \"aria-describedBy\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DealerAdd, {\n    modalStatus: modalStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"makeBill-add-cus-btn\",\n    onClick: modalStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add Dealer\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"text\",\n    name: \"description\",\n    label: \"Description\",\n    variant: \"outlined\",\n    value: values.description,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: Boolean(errors.tax),\n    helperText: errors.tax,\n    type: \"number\",\n    name: \"tax\",\n    label: \"Tax\",\n    variant: \"outlined\",\n    value: values.tax,\n    as: TextField,\n    onBlur: () => {\n      taxBlur(values, setFieldValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"number\",\n    name: \"total\",\n    label: \"Total\",\n    variant: \"outlined\",\n    value: values.total,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: touched.discount && Boolean(errors.discount),\n    helperText: touched.discount && errors.discount,\n    type: \"number\",\n    name: \"discount\",\n    label: \"Discount\",\n    variant: \"outlined\",\n    value: values.discount,\n    as: TextField,\n    onBlur: () => discountBlur(values, setFieldValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: touched.otherCharges && Boolean(errors.otherCharges),\n    helperText: touched.otherCharges && errors.otherCharges,\n    type: \"number\",\n    name: \"otherCharges\",\n    label: \"OtherCharges\",\n    variant: \"outlined\",\n    value: values.otherCharges,\n    as: TextField,\n    onBlur: () => otherChargesBlur(values, setFieldValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"number\",\n    name: \"totalAmount\",\n    label: \"Total Amount\",\n    variant: \"outlined\",\n    value: values.totalAmount,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 31\n    }\n  }, \"Payment Mode\"), /*#__PURE__*/React.createElement(Select, {\n    error: Boolean(errors.payMode) //helperText={errors.payMode}\n    ,\n    className: \"formBill-formik-select\",\n    labelId: \"payment\",\n    name: \"payMode\",\n    value: values.payMode,\n    label: \"Select Customer\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 35\n    }\n  }, \"Select\")), ['Net-Banking', 'Cash', 'UPI', 'Cheque'].map((pay, i) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: pay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 39\n      }\n    }, pay);\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"text\",\n    name: \"paymentDetails\",\n    label: \"Payment Details\",\n    variant: \"outlined\",\n    value: values.paymentDetails,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formik-formBill-makeBillAction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"reset\" //className='btn-register'\n    ,\n    className: \"formik-formBill-submit-btn\",\n    onClick: () => resetForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 25\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\" //className='btn-register'\n    ,\n    disabled: isSubmitting,\n    className: \"formik-formBill-submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 25\n    }\n  }, \"Purchase\")))))))));\n}\n\nconst mapStateToProps = state => {\n  //console.log(state)\n  return {\n    products: state.products,\n    dealers: state.dealers,\n    stocks: state.stocks\n  };\n};\n\nexport default connect(mapStateToProps)(FormPurchase);","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/components/Purchases/FormPurchase.js"],"names":["React","Fragment","useEffect","useState","connect","Formik","Form","Field","object","string","number","array","Modal","modalStyles","Add","Button","TextField","Box","FormGroup","FormControl","Select","MenuItem","InputLabel","IconButton","Tooltip","moment","DealerAdd","getStocksList","startAddPurchase","registerSchema","shape","quantity","positive","dealer","required","payMode","tax","min","discount","otherCharges","products","Tabular","props","data","values","setFieldValue","handleRemoveProduct","borderCollapse","map","product","i","name","price","FormPurchase","tempId","setTempId","newField","setNewField","modalIsOpen","setModalIsOpen","modalStatus","generateTempId","genId","JSON","stringify","Number","Date","now","substring","dispatch","productChange","e","find","_id","target","value","stock","stocks","console","log","addToPurchaseList","preventDefault","concat","total","id","p","totalAmount","filter","taxBlur","amount","reduce","a","b","discountBlur","otherChargesBlur","setAppElement","date","format","description","paymentDetails","availableStock","setSubmitting","resetForm","regEnable","customer","fd","isSubmitting","handleChange","errors","touched","isValid","Boolean","color","length","dealers","dealerName","pay","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { object, string, number, array } from 'yup'\nimport Modal from 'react-modal'\nimport modalStyles from '../../config/modalCss'\nimport Add from '@material-ui/icons/Add'\nimport {\n  Button,\n  TextField,\n  Box,\n  FormGroup,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  IconButton,\n  Tooltip,\n} from '@material-ui/core'\nimport moment from 'moment'\nimport '../../config/FormikForm.css'\nimport DealerAdd from '../AllUsers/Dealers/DealerAdd'\nimport { getStocksList } from '../../actions/stock'\nimport { startAddPurchase } from '../../actions/purchase'\n\nconst registerSchema = object().shape({\n  quantity: number().positive(),\n  dealer: string().required(),\n  payMode: string().required(),\n  tax: number().required().min(0, 'Must be a positive number'),\n  discount: number().required().min(0, 'Must be a positive number'),\n  otherCharges: number().required().min(0, 'Must be a positive number'),\n  products: array().min(1, 'Billing Cart is empty'),\n})\n\nfunction Tabular(props) {\n  const {data,values,setFieldValue,handleRemoveProduct } = props\n  return (\n    <div>\n      <table border='1' style={{ borderCollapse: 'collapse' }}>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Quantity</th>\n            <th>Price</th>\n            <th>Total</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((product, i) => {\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{product.name}</td>\n                <td>{product.quantity}</td>\n                <td>{product.price}</td>\n                <td>{product.price * product.quantity}</td>\n                <td>\n                  <Button\n                    type='button'\n                    onClick={() =>\n                      handleRemoveProduct(\n                        product.product,\n                        values,\n                        setFieldValue\n                      )\n                    }\n                  >\n                    Remove\n                  </Button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nfunction FormPurchase(props) {\n  const [ tempId, setTempId ] = useState('')\n  const [ newField, setNewField ] = useState(false)\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const modalStatus = () => {\n    setModalIsOpen(!modalIsOpen)\n  }\n\n  const generateTempId = () => {\n    let genId = JSON.stringify(Number(Date.now())).substring(0,12)\n    setTempId(genId)\n  }\n\n  useEffect(() => {\n    props.dispatch(getStocksList())\n    generateTempId()\n    // eslint-disable-next-line\n  },[])\n\n  const productChange = (e,values,setFieldValue) => {\n    const product = props.products.find(\n      (product) => product._id === e.target.value\n    )\n    if(product){\n      const stock = props.stocks.find(\n        (stock) => stock.product._id === product._id\n      )\n      setFieldValue('_id', product._id)\n      setFieldValue('price', product.price)\n      setFieldValue('quantity', 1)\n      setFieldValue('name', product.name)\n      setFieldValue('stock', product.stock)\n      setFieldValue('availableStock', stock.quantity)\n      setNewField(false)\n      console.log(product,stock)\n    }\n    else{\n      setFieldValue('_id', tempId)\n      setFieldValue('price', 0)\n      setFieldValue('quantity', 1)\n      setFieldValue('name', '')\n      setFieldValue('stock', 0)\n      setFieldValue('availableStock', 0)\n      setNewField(true)\n    }\n  }\n\n  const addToPurchaseList = (e,values,setFieldValue) => {\n    e.preventDefault()\n    generateTempId()\n    //console.log(values,setFieldValue)\n    if (values._id) {\n      setFieldValue('products',values.products.concat({\n        product: values._id,\n        price: values.price,\n        quantity: values.quantity,\n        stock: values.stock,\n        name: values.name,\n      }))\n      setFieldValue('_id','')\n      setFieldValue('name','')\n      setFieldValue('price','')\n      setFieldValue('quantity','')\n      setFieldValue('stock','')\n      setFieldValue('availableStock','')\n      setFieldValue('total',Number(values.total) +\n      Number(values.price) * Number(values.quantity))\n      setFieldValue('totalAmount',Number(values.total) +\n      Number(values.price) * Number(values.quantity))\n    }\n    setNewField(false)\n  }\n\n  const handleRemoveProduct = (id,values,setFieldValue) => {\n    const product = values.products.find(p => p.product === id)\n    setFieldValue('total',values.total - product.price * product.quantity)\n    setFieldValue('totalAmount',values.totalAmount - product.price * product.quantity)\n    setFieldValue('products',values.products.filter(product => product.product !== id))\n  }\n\n  const taxBlur = (values,setFieldValue) => {\n    const amount = values.products\n      .map((p) => p.price * p.quantity)\n      .reduce((a, b) => {\n        return a + b\n      }, 0)\n    setFieldValue('total',Number(amount) + (Number(amount) * Number(values.tax)) / 100)\n    setFieldValue('totalAmount',Number(amount) + (Number(amount) * Number(values.tax)) / 100)\n  }\n\n  const discountBlur = (values,setFieldValue) => {\n    setFieldValue('totalAmount',Number(values.totalAmount) -\n    (Number(values.total) * Number(values.discount)) / 100)\n  }\n\n  const otherChargesBlur = (values,setFieldValue) => {\n    setFieldValue('totalAmount',Number(values.totalAmount) + Number(values.otherCharges))\n  }\n\n  Modal.setAppElement('#root')\n\n  return (\n    <div>\n      <Formik\n        //enableReinitialize={true}\n        initialValues={{\n          products: [],\n          _id: '',\n          stock: '',\n          name: '',\n          price: '',\n          quantity: '',\n          date: moment(Date.now()).format('YYYY-MM-DD'),\n          dealer: '',\n          description: '',\n          total: '',\n          discount: 0,\n          tax: 0,\n          otherCharges: 0,\n          payMode: 'Cash',\n          totalAmount: '',\n          paymentDetails: '',\n          availableStock: '',\n          tempId: tempId\n        }}\n        validationSchema={registerSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          const regEnable = () => {\n            setSubmitting(false)\n            resetForm()\n          }\n          const {\n            products,\n            date,\n            customer,\n            total,\n            paymentDetails,\n            tax,\n            description,\n            otherCharges,\n            payMode,\n            discount,\n            totalAmount,\n          } = values\n          const fd = {\n            products,\n            date,\n            customer,\n            total,\n            paymentDetails,\n            tax,\n            description,\n            otherCharges,\n            payMode,\n            discount,\n            totalAmount,\n          }\n          console.log(fd, setSubmitting)\n          props.dispatch(startAddPurchase(fd, regEnable))\n        }}\n      >\n        {({\n          isSubmitting,\n          handleChange,\n          values,\n          errors,\n          touched,\n          isValid,\n          setFieldValue,\n          resetForm,\n        }) => (\n          <Fragment>\n            <div className='formBill-formik'>\n              <Form>\n                <div className='formBill-formik-addProduct'>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <FormControl variant='outlined'>\n                        <InputLabel id='selectProduct'>\n                          Select Product\n                        </InputLabel>\n                        <Select\n                          className='formBill-formik-select'\n                          labelId='selectProduct'\n                          name='_id'\n                          value={values._id}\n                          onChange={(e, values) =>\n                            productChange(e, values, setFieldValue)\n                          }\n                          label='Select Product'\n                        >\n                          <MenuItem value=''>\n                            <em>Select</em>\n                          </MenuItem>\n                          {props.products.map((product, i) => {\n                            return (\n                              <MenuItem key={product._id} value={product._id}>\n                                {product.name}\n                              </MenuItem>\n                            )\n                          })}\n                          <MenuItem value={tempId}>Add new product</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </FormGroup>\n                  </Box>\n                  {\n                    newField && (\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <Field\n                            //error={touched.username && Boolean(errors.username)}\n                            type='text'\n                            value={values.name}\n                            name='name'\n                            label='New product name'\n                            variant='outlined'\n                            as={TextField}\n                            //helperText={touched.username && errors.username}\n                          />\n                        </FormGroup>\n                      </Box>\n                    )\n                  }\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <Field\n                        //error={touched.username && Boolean(errors.username)}\n                        type='number'\n                        value={values.price}\n                        name='price'\n                        label='Price'\n                        variant='outlined'\n                        as={TextField}\n                        //helperText={touched.username && errors.username}\n                      />\n                    </FormGroup>\n                  </Box>\n                  {!newField && (\n                    <Box marginBottom={2}>\n                      <FormGroup>\n                        <Field\n                          error={Boolean(errors.availableStock)}\n                          helperText={errors.availableStock}\n                          type='number'\n                          name='availableStock'\n                          label='Available Stock'\n                          variant='outlined'\n                          value={values.availableStock}\n                          as={TextField}\n                          readOnly={true}\n                          disabled\n                        />\n                      </FormGroup>\n                    </Box>\n                  )}\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <Field\n                        error={touched.quantity && Boolean(errors.quantity)}\n                        helperText={touched.quantity && errors.quantity}\n                        type='number'\n                        name='quantity'\n                        label='Buy quantity'\n                        variant='outlined'\n                        value={values.quantity}\n                        as={TextField}\n                      />\n                    </FormGroup>\n                  </Box>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        type='button'\n                        className='formik-formBill-addProBtn'\n                        onClick={(e)=>addToPurchaseList(e,values,setFieldValue)}\n                      >\n                        Add to Purchase\n                      </Button>\n                    </FormGroup>\n                  </Box>\n                </div>\n                <div>\n                  {!Boolean(errors.products) && (\n                    <p style={{ color: 'red' }}>{errors.products}</p>\n                  )}\n                  {values.products.length > 0 && (\n                    <Fragment>\n                      <h3>Billing Cart</h3>\n                      <Tabular\n                        data={values.products}\n                        values={values}\n                        setFieldValue={setFieldValue}\n                        handleRemoveProduct={handleRemoveProduct}\n                      />\n                      {/* --------------------------Billing form ----------------------------------------------*/}\n                      <div className='formik-formBill-makeBill'>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              //error={touched.email && Boolean(errors.email)}\n                              //helperText={touched.email && errors.email}\n                              type='date'\n                              name='date'\n                              label='Date'\n                              variant='outlined'\n                              value={values.date}\n                              as={TextField}\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <FormControl variant='outlined'>\n                              <InputLabel id='selectDealer'>\n                                Select Dealer\n                              </InputLabel>\n                              <Select\n                                error={\n                                  touched.dealer && Boolean(errors.dealer)\n                                }\n                                //helperText={touched.dealer && errors.dealer}\n                                className='formBill-formik-select'\n                                labelId='selectDealer'\n                                name='dealer'\n                                value={values.dealer}\n                                label='Select Dealer'\n                                onChange={handleChange}\n                              >\n                                <MenuItem value=''>\n                                  <em>Select</em>\n                                </MenuItem>\n                                {props.dealers.map((dealer, i) => {\n                                  return (\n                                    <MenuItem\n                                      key={dealer._id}\n                                      value={dealer._id}\n                                    >\n                                      {dealer.dealerName}\n                                    </MenuItem>\n                                  )\n                                })}\n                              </Select>\n                            </FormControl>\n                          </FormGroup>\n                        </Box>\n                        <Modal\n                          style={modalStyles}\n                          isOpen={modalIsOpen}\n                          // onAfterOpen={this.afterOpenModal}\n                          onRequestClose={modalStatus}\n                          aria-labelledBy='Create Category'\n                          aria-describedBy='simple-modal-description'\n                        >\n                          <DealerAdd modalStatus={modalStatus} />\n                        </Modal>\n                        <IconButton\n                          className='makeBill-add-cus-btn'\n                          onClick={modalStatus}\n                        >\n                          <Tooltip title='Add Dealer' placement='top'>\n                            <Add />\n                          </Tooltip>\n                        </IconButton>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              //error={touched.email && Boolean(errors.email)}\n                              //helperText={touched.email && errors.email}\n                              type='text'\n                              name='description'\n                              label='Description'\n                              variant='outlined'\n                              value={values.description}\n                              as={TextField}\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              error={Boolean(errors.tax)}\n                              helperText={errors.tax}\n                              type='number'\n                              name='tax'\n                              label='Tax'\n                              variant='outlined'\n                              value={values.tax}\n                              as={TextField}\n                              onBlur={() => {\n                                taxBlur(values, setFieldValue)\n                              }}\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              //error={touched.email && Boolean(errors.email)}\n                              //helperText={touched.email && errors.email}\n                              type='number'\n                              name='total'\n                              label='Total'\n                              variant='outlined'\n                              value={values.total}\n                              as={TextField}\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              error={\n                                touched.discount && Boolean(errors.discount)\n                              }\n                              helperText={touched.discount && errors.discount}\n                              type='number'\n                              name='discount'\n                              label='Discount'\n                              variant='outlined'\n                              value={values.discount}\n                              as={TextField}\n                              onBlur={() => discountBlur(values,setFieldValue)}\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              error={\n                                touched.otherCharges &&\n                                Boolean(errors.otherCharges)\n                              }\n                              helperText={\n                                touched.otherCharges && errors.otherCharges\n                              }\n                              type='number'\n                              name='otherCharges'\n                              label='OtherCharges'\n                              variant='outlined'\n                              value={values.otherCharges}\n                              as={TextField}\n                              onBlur={() =>\n                                otherChargesBlur(values,setFieldValue)\n                              }\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              //error={touched.email && Boolean(errors.email)}\n                              //helperText={touched.email && errors.email}\n                              type='number'\n                              name='totalAmount'\n                              label='Total Amount'\n                              variant='outlined'\n                              value={values.totalAmount}\n                              as={TextField}\n                            />\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <FormControl variant='outlined'>\n                              <InputLabel id='payment'>Payment Mode</InputLabel>\n                              <Select\n                                error={Boolean(errors.payMode)}\n                                //helperText={errors.payMode}\n                                className='formBill-formik-select'\n                                labelId='payment'\n                                name='payMode'\n                                value={values.payMode}\n                                label='Select Customer'\n                                onChange={handleChange}\n                              >\n                                <MenuItem value=''>\n                                  <em>Select</em>\n                                </MenuItem>\n                                {['Net-Banking', 'Cash', 'UPI', 'Cheque'].map(\n                                  (pay, i) => {\n                                    return (\n                                      <MenuItem key={i} value={pay}>\n                                        {pay}\n                                      </MenuItem>\n                                    )\n                                  }\n                                )}\n                              </Select>\n                            </FormControl>\n                          </FormGroup>\n                        </Box>\n                        <Box marginBottom={2}>\n                          <FormGroup>\n                            <Field\n                              //error={touched.email && Boolean(errors.email)}\n                              //helperText={touched.email && errors.email}\n                              type='text'\n                              name='paymentDetails'\n                              label='Payment Details'\n                              variant='outlined'\n                              value={values.paymentDetails}\n                              as={TextField}\n                            />\n                          </FormGroup>\n                        </Box>\n                      </div>\n                      <div className='formik-formBill-makeBillAction'>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          type='reset'\n                          //className='btn-register'\n                          className='formik-formBill-submit-btn'\n                          onClick={() => resetForm()}\n                        >\n                          Clear\n                        </Button>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          type='submit'\n                          //className='btn-register'\n                          disabled={isSubmitting}\n                          className='formik-formBill-submit-btn'\n                        >\n                          Purchase\n                        </Button>\n                      </div>\n                    </Fragment>\n                  )}\n                </div>\n                {/* <pre>{JSON.stringify(values, null, 4)}</pre>\n                <pre>{JSON.stringify(isSubmitting, null, 4)}</pre>\n                <pre>{JSON.stringify(errors, null, 4)}</pre>\n                <pre>{JSON.stringify(isValid, null, 4)}</pre> */}\n              </Form>\n            </div>\n          </Fragment>\n        )}\n      </Formik>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(state)\n  return {\n    products: state.products,\n    dealers: state.dealers,\n    stocks: state.stocks,\n  }\n}\n\nexport default connect(mapStateToProps)(FormPurchase)\n"]},"metadata":{},"sourceType":"module"}