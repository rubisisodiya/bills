{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport userReducer from '../reducers/userReducer';\nimport categoryReducer from '../reducers/categoryReducer';\nimport productReducer from '../reducers/productReducer';\nimport allUsersReducer from '../reducers/allUsersReducer';\nimport stockReducer from '../reducers/stocksReducer';\nimport purchaseReducer from '../reducers/purchaseReducer';\nimport expenseReducer from '../reducers/expenseReducer';\nimport expenditureTypesReducer from '../reducers/expenditureTypeReducer';\nimport billReducer from '../reducers/billReducer';\nimport employeesReducer from '../reducers/employeesReducer.js';\nimport customersReducer from '../reducers/customersReducer.js';\nimport dealersReducer from '../reducers/dealersReducer.js';\nconst appReducer = combineReducers({\n  user: userReducer,\n  categories: categoryReducer,\n  products: productReducer,\n  users: allUsersReducer,\n  stocks: stockReducer,\n  purchases: purchaseReducer,\n  expenses: expenseReducer,\n  expenditureTypes: expenditureTypesReducer,\n  bills: billReducer,\n  employees: employeesReducer,\n  customers: customersReducer,\n  dealers: dealersReducer\n});\nexport const rootReducer = (state, action) => {\n  if (action.type === 'LOGOUT') {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\nconst preloadedState = {\n  user: {\n    isLoaded: false\n  }\n};\n\nconst configureStore = () => {\n  const store = createStore(rootReducer, preloadedState, applyMiddleware(thunk));\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/store/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","userReducer","categoryReducer","productReducer","allUsersReducer","stockReducer","purchaseReducer","expenseReducer","expenditureTypesReducer","billReducer","employeesReducer","customersReducer","dealersReducer","appReducer","user","categories","products","users","stocks","purchases","expenses","expenditureTypes","bills","employees","customers","dealers","rootReducer","state","action","type","undefined","preloadedState","isLoaded","configureStore","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,UAAU,GAAGf,eAAe,CAAC;AAC/BgB,EAAAA,IAAI,EAAEb,WADyB;AAE/Bc,EAAAA,UAAU,EAAEb,eAFmB;AAG/Bc,EAAAA,QAAQ,EAAEb,cAHqB;AAI/Bc,EAAAA,KAAK,EAAEb,eAJwB;AAK/Bc,EAAAA,MAAM,EAAEb,YALuB;AAM/Bc,EAAAA,SAAS,EAAEb,eANoB;AAO/Bc,EAAAA,QAAQ,EAAEb,cAPqB;AAQ/Bc,EAAAA,gBAAgB,EAAEb,uBARa;AAS/Bc,EAAAA,KAAK,EAAEb,WATwB;AAU/Bc,EAAAA,SAAS,EAAEb,gBAVoB;AAW/Bc,EAAAA,SAAS,EAAEb,gBAXoB;AAY/Bc,EAAAA,OAAO,EAAEb;AAZsB,CAAD,CAAlC;AAeA,OAAO,MAAMc,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,MAAGA,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B;AACzBF,IAAAA,KAAK,GAAGG,SAAR;AACH;;AACD,SAAOjB,UAAU,CAACc,KAAD,EAAQC,MAAR,CAAjB;AACH,CALM;AAOP,MAAMG,cAAc,GAAG;AACnBjB,EAAAA,IAAI,EAAE;AACFkB,IAAAA,QAAQ,EAAE;AADR;AADa,CAAvB;;AAMA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,KAAK,GAAGrC,WAAW,CAAC6B,WAAD,EAAcK,cAAd,EAA8BhC,eAAe,CAACC,KAAD,CAA7C,CAAzB;AACA,SAAOkC,KAAP;AACH,CAHD;;AAKA,eAAeD,cAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport userReducer from '../reducers/userReducer'\nimport categoryReducer from '../reducers/categoryReducer'\nimport productReducer from '../reducers/productReducer'\nimport allUsersReducer from '../reducers/allUsersReducer'\nimport stockReducer from '../reducers/stocksReducer'\nimport purchaseReducer from '../reducers/purchaseReducer'\nimport expenseReducer from '../reducers/expenseReducer'\nimport expenditureTypesReducer from '../reducers/expenditureTypeReducer'\nimport billReducer from '../reducers/billReducer'\nimport employeesReducer from '../reducers/employeesReducer.js'\nimport customersReducer from '../reducers/customersReducer.js'\nimport dealersReducer from '../reducers/dealersReducer.js'\n\nconst appReducer = combineReducers({\n    user: userReducer,\n    categories: categoryReducer,\n    products: productReducer,\n    users: allUsersReducer,\n    stocks: stockReducer,\n    purchases: purchaseReducer,\n    expenses: expenseReducer,\n    expenditureTypes: expenditureTypesReducer,\n    bills: billReducer,\n    employees: employeesReducer,\n    customers: customersReducer,\n    dealers: dealersReducer\n})\n\nexport const rootReducer = (state, action) => {\n    if(action.type === 'LOGOUT') {\n        state = undefined\n    }\n    return appReducer(state, action)\n}\n\nconst preloadedState = {\n    user: {\n        isLoaded: false\n    }\n}\n\nconst configureStore = () => {\n    const store = createStore(rootReducer, preloadedState, applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore"]},"metadata":{},"sourceType":"module"}