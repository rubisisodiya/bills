{"ast":null,"code":"import axios from '../config/axios';\nimport Swal from 'sweetalert2';\nconst getToken = localStorage.getItem('authToken');\n\nconst getEmployees = emps => {\n  return {\n    type: 'EMPLOYEES_LIST',\n    payload: emps\n  };\n};\n\nconst addEmployee = data => {\n  return {\n    type: 'ADD_EMPLOYEE',\n    payload: data\n  };\n}; // const updateProduct = (id,product)=>{\n//     return {\n//         type: 'UPDATE_PRODUCT',payload: {id,product}\n//     }\n// }\n\n\nconst removeEmployee = id => {\n  return {\n    type: 'REMOVE_EMPLOYEE',\n    payload: id\n  };\n};\n\nexport const startListEmployees = () => {\n  return dispatch => {\n    axios.get('/employees').then(response => {\n      //console.log(response)\n      if (response.data) {\n        dispatch(getEmployees(response.data));\n      }\n    }).catch(err => {\n      console.log('error products', err);\n    });\n  };\n};\nexport const startAddEmployee = data => {\n  return dispatch => {\n    axios.post(`/employees`, data, {\n      headers: {\n        'x-auth': getToken\n      }\n    }).then(res => {\n      if (res.data.errors) {\n        Swal.fire({\n          type: 'error',\n          text: \"Check the fields\"\n        });\n      } else {\n        const emp = res.data;\n        dispatch(addEmployee(emp)); //console.log('EMP-ADDED', emp)\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n}; // export const startUpdateProduct = (id,data,history) => {\n//     return (dispatch) => {\n//         axios.put(`/products/edit/${id}`,data,{\n//             headers: {\n//                 'x-auth': localStorage.getItem('authToken')\n//             }\n//         })\n//         .then(res => {\n//             if(res.data.errors){\n//                 Swal.fire({\n//                     type: 'error',\n//                     text: \"Check the fileds\"\n//                 })\n//             }else{\n//                 dispatch(updateProduct(res.data._id,res.data))\n//                 // history.push('/products')\n//                 window.location.reload()\n//             }\n//         })\n//         .catch(err => {\n//             Swal.fire({\n//                 type: 'error',\n//                 text: err\n//             })\n//         })\n//     }\n// }\n\nexport const startRemoveEmployee = id => {\n  return dispatch => {\n    axios.delete(`/employees/${id}`, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(res => {\n      //console.log(res, 'DEL-EMP')\n      dispatch(removeEmployee(res.data._id));\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/actions/employee.js"],"names":["axios","Swal","getToken","localStorage","getItem","getEmployees","emps","type","payload","addEmployee","data","removeEmployee","id","startListEmployees","dispatch","get","then","response","catch","err","console","log","startAddEmployee","post","headers","res","errors","fire","text","emp","startRemoveEmployee","delete","_id"],"mappings":"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","sourcesContent":["import axios from '../config/axios'\nimport Swal from 'sweetalert2'\nconst getToken = localStorage.getItem('authToken')\n\nconst getEmployees = (emps) => {\n    return {\n        type: 'EMPLOYEES_LIST', payload: emps\n    }\n}\nconst addEmployee = (data)=>{\n    return {\n        type: 'ADD_EMPLOYEE',payload: data\n    }\n}\n\n// const updateProduct = (id,product)=>{\n//     return {\n//         type: 'UPDATE_PRODUCT',payload: {id,product}\n//     }\n// }\n\nconst removeEmployee = (id)=>{\n    return {\n        type: 'REMOVE_EMPLOYEE',payload: id\n    }\n}\n\n\nexport const startListEmployees = () => {\n    return (dispatch) => {\n        axios.get('/employees')\n            .then(response => {\n                //console.log(response)\n                if (response.data) {\n                    dispatch(getEmployees(response.data))\n                }\n            })\n            .catch(err => {\n                console.log('error products', err)\n            })\n    }\n}\n\nexport const startAddEmployee = (data) => {\n    return (dispatch) => {\n        axios.post(`/employees`,data,{\n            headers: {\n                'x-auth': getToken\n            }\n        })\n        .then(res => {\n            if(res.data.errors){\n                Swal.fire({\n                    type: 'error',\n                    text: \"Check the fields\"\n                })\n            }else{\n                const emp = res.data;\n                dispatch(addEmployee(emp))\n                //console.log('EMP-ADDED', emp)\n            }\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n            \n        })\n    }\n}\n// export const startUpdateProduct = (id,data,history) => {\n//     return (dispatch) => {\n//         axios.put(`/products/edit/${id}`,data,{\n//             headers: {\n//                 'x-auth': localStorage.getItem('authToken')\n//             }\n//         })\n//         .then(res => {\n//             if(res.data.errors){\n//                 Swal.fire({\n//                     type: 'error',\n//                     text: \"Check the fileds\"\n//                 })\n//             }else{\n//                 dispatch(updateProduct(res.data._id,res.data))\n//                 // history.push('/products')\n//                 window.location.reload()\n//             }\n//         })\n//         .catch(err => {\n//             Swal.fire({\n//                 type: 'error',\n//                 text: err\n//             })\n//         })\n//     }\n// }\n\nexport const startRemoveEmployee = (id) => {\n    return (dispatch) => {\n        axios.delete(`/employees/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(res => {\n            //console.log(res, 'DEL-EMP')\n            dispatch(removeEmployee(res.data._id))\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}