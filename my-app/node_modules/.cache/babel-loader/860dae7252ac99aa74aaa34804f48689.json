{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rubi Singh\\\\meanstark\\\\nodeexpress\\\\billing\\\\my-app\\\\src\\\\components\\\\Bills\\\\FormBill.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { object, string, ref, number, array } from 'yup';\nimport Modal from 'react-modal';\nimport modalStyles from '../../config/modalCss';\nimport Add from '@material-ui/icons/Add';\nimport { Button, TextField, Box, FormGroup, FormControl, Select, MenuItem, InputLabel, IconButton, Tooltip } from '@material-ui/core';\nimport moment from 'moment';\nimport CustomerAdd from '../AllUsers/Customers/CustomerAdd';\nimport { getStocksList } from './../../actions/stock';\nimport '../../config/FormikForm.css';\nimport { startAddBill } from '../../actions/bill';\nconst registerSchema = object().shape({\n  availableStock: number().positive('The product is currently unavailable'),\n  quantity: number().positive().lessThan(ref('availableStock'), 'Quantity exceeds available stock'),\n  customer: string().required(),\n  payMode: string().required(),\n  tax: number().required().min(0, 'Must be a positive number'),\n  discount: number().required().min(0, 'Must be a positive number'),\n  otherCharges: number().required().min(0, 'Must be a positive number'),\n  products: array().min(1, 'Billing Cart is empty')\n});\n\nfunction Tabular(props) {\n  const {\n    data,\n    values,\n    setFieldValue,\n    handleRemoveProduct\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    style: {\n      borderCollapse: 'collapse'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, data.map((product, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, product.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, product.price), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, product.price * product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: () => handleRemoveProduct(product.product, values, setFieldValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"Remove\")));\n  }))));\n}\n\nfunction FormBill(props) {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const modalStatus = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  useEffect(() => {\n    props.dispatch(getStocksList()); // eslint-disable-next-line\n  }, []);\n\n  const productChange = (e, values, setFieldValue) => {\n    const product = props.products.find(product => product._id === e.target.value);\n    const stock = props.stocks.find(stock => stock.product._id === product._id);\n    setFieldValue('_id', product._id);\n    setFieldValue('price', stock.stockPrice);\n\n    if (stock.quantity) {\n      setFieldValue('quantity', 1);\n    } else {\n      setFieldValue('quantity', 0);\n    }\n\n    setFieldValue('name', product.name);\n    setFieldValue('stock', product.stock);\n    setFieldValue('availableStock', stock.quantity);\n  };\n\n  const addToBillList = (e, values, setFieldValue) => {\n    e.preventDefault();\n    console.log(values, setFieldValue);\n\n    if (values._id) {\n      setFieldValue('products', values.products.concat({\n        product: values._id,\n        price: values.price,\n        quantity: values.quantity,\n        stock: values.stock,\n        name: values.name\n      }));\n      setFieldValue('_id', '');\n      setFieldValue('name', '');\n      setFieldValue('price', '');\n      setFieldValue('quantity', '');\n      setFieldValue('stock', '');\n      setFieldValue('availableStock', '');\n      setFieldValue('total', Number(values.total) + Number(values.price) * Number(values.quantity));\n      setFieldValue('totalAmount', Number(values.total) + Number(values.price) * Number(values.quantity));\n    }\n  };\n\n  const handleRemoveProduct = (id, values, setFieldValue) => {\n    const product = values.products.find(p => p.product === id);\n    setFieldValue('total', values.total - product.price * product.quantity);\n    setFieldValue('totalAmount', values.totalAmount - product.price * product.quantity);\n    setFieldValue('products', values.products.filter(product => product.product !== id));\n  };\n\n  const taxBlur = (values, setFieldValue) => {\n    const amount = values.products.map(p => p.price * p.quantity).reduce((a, b) => {\n      return a + b;\n    }, 0);\n    setFieldValue('total', Number(amount) + Number(amount) * Number(values.tax) / 100);\n    setFieldValue('totalAmount', Number(amount) + Number(amount) * Number(values.tax) / 100);\n  };\n\n  const discountBlur = (values, setFieldValue) => {\n    setFieldValue('totalAmount', Number(values.totalAmount) - Number(values.total) * Number(values.discount) / 100);\n  };\n\n  const otherChargesBlur = (values, setFieldValue) => {\n    setFieldValue('totalAmount', Number(values.totalAmount) + Number(values.otherCharges));\n  };\n\n  Modal.setAppElement('#root');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      products: [],\n      _id: '',\n      stock: '',\n      name: '',\n      price: '',\n      quantity: '',\n      date: moment(Date.now()).format('YYYY-MM-DD'),\n      customer: '',\n      description: '',\n      total: '',\n      discount: 0,\n      tax: 0,\n      otherCharges: 0,\n      payMode: 'Cash',\n      totalAmount: '',\n      paymentDetails: '',\n      availableStock: ''\n    },\n    validationSchema: registerSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const regEnable = () => {\n        setSubmitting(false);\n        resetForm();\n      };\n\n      const {\n        products,\n        date,\n        customer,\n        total,\n        paymentDetails,\n        tax,\n        description,\n        otherCharges,\n        payMode,\n        discount,\n        totalAmount\n      } = values;\n      const fd = {\n        products,\n        date,\n        customer,\n        total,\n        paymentDetails,\n        tax,\n        description,\n        otherCharges,\n        payMode,\n        discount,\n        totalAmount\n      }; //console.log(fd, setSubmitting)\n\n      props.dispatch(startAddBill(fd, regEnable));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting,\n    handleChange,\n    values,\n    errors,\n    touched,\n    isValid,\n    setFieldValue,\n    resetForm\n  }) => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBill-formik\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBill-formik-addProduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"selectProduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, \"Select Product\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"formBill-formik-select\",\n    labelId: \"selectProduct\",\n    name: \"_id\",\n    value: values._id,\n    onChange: (e, values) => productChange(e, values, setFieldValue),\n    label: \"Select Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, \"Select\")), props.products.map((product, i) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: product._id,\n      value: product._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 31\n      }\n    }, product.name);\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.username && Boolean(errors.username)}\n  , {\n    type: \"number\",\n    value: values.price,\n    name: \"price\",\n    label: \"Price\",\n    variant: \"outlined\",\n    as: TextField //helperText={touched.username && errors.username}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: Boolean(errors.availableStock),\n    helperText: errors.availableStock,\n    type: \"number\",\n    name: \"availableStock\",\n    label: \"Available\",\n    variant: \"outlined\",\n    value: values.availableStock,\n    as: TextField,\n    readOnly: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: touched.quantity && Boolean(errors.quantity),\n    helperText: touched.quantity && errors.quantity,\n    type: \"number\",\n    name: \"quantity\",\n    label: \"Quantity\",\n    variant: \"outlined\",\n    value: values.quantity,\n    as: TextField,\n    disabled: !Boolean(values.availableStock),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    className: \"formik-formBill-addProBtn\",\n    disabled: !Boolean(values.availableStock),\n    onClick: e => addToBillList(e, values, setFieldValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  }, \"Add to Bill\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, !Boolean(errors.products) && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 52\n    }\n  }, errors.products), values.products.length > 0 && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 27\n    }\n  }, \"Billing Cart\"), /*#__PURE__*/React.createElement(Tabular, {\n    data: values.products,\n    values: values,\n    setFieldValue: setFieldValue,\n    handleRemoveProduct: handleRemoveProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formik-formBill-makeBill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"date\",\n    name: \"date\",\n    label: \"Date\",\n    variant: \"outlined\",\n    value: values.date,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"selectCustomer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 35\n    }\n  }, \"Select Customer\"), /*#__PURE__*/React.createElement(Select, {\n    error: touched.customer && Boolean(errors.customer) //helperText={touched.customer && errors.customer}\n    ,\n    className: \"formBill-formik-select\",\n    labelId: \"selectCustomer\",\n    name: \"customer\",\n    value: values.customer,\n    label: \"Select Customer\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 39\n    }\n  }, \"Select\")), props.customers.map((customer, i) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: customer._id,\n      value: customer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 41\n      }\n    }, customer.name);\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    style: modalStyles,\n    isOpen: modalIsOpen // onAfterOpen={this.afterOpenModal}\n    ,\n    onRequestClose: modalStatus,\n    \"aria-labelledBy\": \"Create Category\",\n    \"aria-describedBy\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CustomerAdd, {\n    modalStatus: modalStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"makeBill-add-cus-btn\",\n    onClick: modalStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add Customer\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"text\",\n    name: \"description\",\n    label: \"Description\",\n    variant: \"outlined\",\n    value: values.description,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: Boolean(errors.tax),\n    helperText: errors.tax,\n    type: \"number\",\n    name: \"tax\",\n    label: \"Tax\",\n    variant: \"outlined\",\n    value: values.tax,\n    as: TextField,\n    onBlur: () => {\n      taxBlur(values, setFieldValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"number\",\n    name: \"total\",\n    label: \"Total\",\n    variant: \"outlined\",\n    value: values.total,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: touched.discount && Boolean(errors.discount),\n    helperText: touched.discount && errors.discount,\n    type: \"number\",\n    name: \"discount\",\n    label: \"Discount\",\n    variant: \"outlined\",\n    value: values.discount,\n    as: TextField,\n    onBlur: () => discountBlur(values, setFieldValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    error: touched.otherCharges && Boolean(errors.otherCharges),\n    helperText: touched.otherCharges && errors.otherCharges,\n    type: \"number\",\n    name: \"otherCharges\",\n    label: \"OtherCharges\",\n    variant: \"outlined\",\n    value: values.otherCharges,\n    as: TextField,\n    onBlur: () => otherChargesBlur(values, setFieldValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"number\",\n    name: \"totalAmount\",\n    label: \"Total Amount\",\n    variant: \"outlined\",\n    value: values.totalAmount,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 35\n    }\n  }, \"Payment Mode\"), /*#__PURE__*/React.createElement(Select, {\n    error: Boolean(errors.payMode) //helperText={errors.payMode}\n    ,\n    className: \"formBill-formik-select\",\n    labelId: \"payment\",\n    name: \"payMode\",\n    value: values.payMode,\n    label: \"Select Customer\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 39\n    }\n  }, \"Select\")), ['Net-Banking', 'Cash', 'UPI', 'Cheque'].map((pay, i) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: pay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 41\n      }\n    }, pay);\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field //error={touched.email && Boolean(errors.email)}\n  //helperText={touched.email && errors.email}\n  , {\n    type: \"text\",\n    name: \"paymentDetails\",\n    label: \"Payment Details\",\n    variant: \"outlined\",\n    value: values.paymentDetails,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formik-formBill-makeBillAction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"reset\" //className='btn-register'\n    ,\n    className: \"formik-formBill-submit-btn\",\n    onClick: () => resetForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 31\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\" //className='btn-register'\n    ,\n    disabled: isSubmitting,\n    className: \"formik-formBill-submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 33\n    }\n  }, \"Bill\")))))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    customers: state.customers,\n    stocks: state.stocks\n  };\n};\n\nexport default connect(mapStateToProps)(FormBill);","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/components/Bills/FormBill.js"],"names":["React","Fragment","useEffect","useState","connect","Formik","Form","Field","object","string","ref","number","array","Modal","modalStyles","Add","Button","TextField","Box","FormGroup","FormControl","Select","MenuItem","InputLabel","IconButton","Tooltip","moment","CustomerAdd","getStocksList","startAddBill","registerSchema","shape","availableStock","positive","quantity","lessThan","customer","required","payMode","tax","min","discount","otherCharges","products","Tabular","props","data","values","setFieldValue","handleRemoveProduct","borderCollapse","map","product","i","name","price","FormBill","modalIsOpen","setModalIsOpen","modalStatus","dispatch","productChange","e","find","_id","target","value","stock","stocks","stockPrice","addToBillList","preventDefault","console","log","concat","Number","total","id","p","totalAmount","filter","taxBlur","amount","reduce","a","b","discountBlur","otherChargesBlur","setAppElement","date","Date","now","format","description","paymentDetails","setSubmitting","resetForm","regEnable","fd","isSubmitting","handleChange","errors","touched","isValid","Boolean","color","length","customers","pay","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { object, string, ref, number, array } from 'yup'\nimport Modal from 'react-modal'\nimport modalStyles from '../../config/modalCss'\nimport Add from '@material-ui/icons/Add'\nimport {\n  Button,\n  TextField,\n  Box,\n  FormGroup,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  IconButton,\n  Tooltip\n} from '@material-ui/core'\nimport moment from 'moment'\nimport CustomerAdd from '../AllUsers/Customers/CustomerAdd'\nimport { getStocksList } from './../../actions/stock'\nimport '../../config/FormikForm.css'\nimport { startAddBill } from '../../actions/bill'\n\nconst registerSchema = object().shape({\n  availableStock: number().positive('The product is currently unavailable'),\n  quantity: number().positive().lessThan(ref('availableStock'),'Quantity exceeds available stock'),\n  customer: string().required(),\n  payMode: string().required(),\n  tax: number().required().min(0,'Must be a positive number'),\n  discount: number().required().min(0,'Must be a positive number'),\n  otherCharges: number().required().min(0,'Must be a positive number'),\n  products: array().min(1,'Billing Cart is empty')\n})\n\nfunction Tabular(props){\n  const { data, values, setFieldValue, handleRemoveProduct } = props\n  return(\n    <div>\n        <table border='1' style={{borderCollapse:'collapse'}}>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Quantity</th>\n                    <th>Price</th>\n                    <th>Total</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>{\n                data.map((product,i) => {\n                    return (<tr key={i}>\n                        <td>{i+1}</td>\n                        <td>{product.name}</td>\n                        <td>{product.quantity}</td>\n                        <td>{product.price}</td>\n                        <td>{product.price*product.quantity}</td>\n                        <td><Button type='button' onClick={() => handleRemoveProduct(product.product,values,setFieldValue)}>Remove</Button></td>\n                    </tr>)\n                })\n            }\n            </tbody>\n        </table>\n    </div>\n  )\n}\n\nfunction FormBill(props) {\n  const [modalIsOpen,setModalIsOpen] = useState(false)\n  const modalStatus = () => {\n    setModalIsOpen(!modalIsOpen)\n  }\n  useEffect(() => {\n    props.dispatch(getStocksList())\n    // eslint-disable-next-line\n  }, [])\n\n  const productChange = (e, values, setFieldValue) => {\n    const product = props.products.find(\n      (product) => product._id === e.target.value\n    )\n    const stock = props.stocks.find(\n      (stock) => stock.product._id === product._id\n    )\n    setFieldValue('_id', product._id)\n    setFieldValue('price', stock.stockPrice)\n    if(stock.quantity){\n      setFieldValue('quantity', 1)\n    }else{\n      setFieldValue('quantity', 0)\n    }\n    setFieldValue('name', product.name)\n    setFieldValue('stock', product.stock)\n    setFieldValue('availableStock', stock.quantity)\n  }\n  const addToBillList = (e,values,setFieldValue) => {\n    e.preventDefault()\n    console.log(values,setFieldValue)\n    if (values._id) {\n      setFieldValue('products',values.products.concat({\n        product: values._id,\n        price: values.price,\n        quantity: values.quantity,\n        stock: values.stock,\n        name: values.name,\n      }))\n      setFieldValue('_id','')\n      setFieldValue('name','')\n      setFieldValue('price','')\n      setFieldValue('quantity','')\n      setFieldValue('stock','')\n      setFieldValue('availableStock','')\n      setFieldValue('total',Number(values.total) +\n      Number(values.price) * Number(values.quantity))\n      setFieldValue('totalAmount',Number(values.total) +\n      Number(values.price) * Number(values.quantity))\n    }\n  }\n  const handleRemoveProduct = (id,values,setFieldValue) => {\n    const product = values.products.find(p => p.product === id)\n    setFieldValue('total',values.total - product.price * product.quantity)\n    setFieldValue('totalAmount',values.totalAmount - product.price * product.quantity)\n    setFieldValue('products',values.products.filter(product => product.product !== id))\n  }\n\n  const taxBlur = (values,setFieldValue) => {\n    const amount = values.products\n      .map((p) => p.price * p.quantity)\n      .reduce((a, b) => {\n        return a + b\n      }, 0)\n    setFieldValue('total',Number(amount) + (Number(amount) * Number(values.tax)) / 100)\n    setFieldValue('totalAmount',Number(amount) + (Number(amount) * Number(values.tax)) / 100)\n  }\n\n  const discountBlur = (values,setFieldValue) => {\n    setFieldValue('totalAmount',Number(values.totalAmount) -\n    (Number(values.total) * Number(values.discount)) / 100)\n  }\n\n  const otherChargesBlur = (values,setFieldValue) => {\n    setFieldValue('totalAmount',Number(values.totalAmount) + Number(values.otherCharges))\n  }\n  Modal.setAppElement('#root')\n\n  return (\n    <div>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n          products: [],\n          _id: '',\n          stock: '',\n          name: '',\n          price: '',\n          quantity: '',\n          date: moment(Date.now()).format('YYYY-MM-DD'),\n          customer: '',\n          description: '',\n          total: '',\n          discount: 0,\n          tax: 0,\n          otherCharges: 0,\n          payMode: 'Cash',\n          totalAmount: '',\n          paymentDetails: '',\n          availableStock: '',\n        }}\n        validationSchema={registerSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          const regEnable = () => {\n            setSubmitting(false)\n            resetForm()\n          }\n          const  {\n              products,\n              date,\n              customer,\n              total,\n              paymentDetails,\n              tax,\n              description,\n              otherCharges,\n              payMode,\n              discount,\n              totalAmount,\n          } = values\n          const fd = {\n            products,\n              date,\n              customer,\n              total,\n              paymentDetails,\n              tax,\n              description,\n              otherCharges,\n              payMode,\n              discount,\n              totalAmount,\n          }\n          //console.log(fd, setSubmitting)\n          props.dispatch(startAddBill(fd,regEnable))\n        }}\n      >\n        {({\n          isSubmitting,\n          handleChange,\n          values,\n          errors,\n          touched,\n          isValid,\n          setFieldValue,\n          resetForm\n        }) => (\n          <Fragment>\n            <div className='formBill-formik'>\n              <Form>\n                <div className='formBill-formik-addProduct'>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <FormControl variant='outlined'>\n                        <InputLabel id='selectProduct'>\n                          Select Product\n                        </InputLabel>\n                        <Select\n                          className='formBill-formik-select'\n                          labelId='selectProduct'\n                          name='_id'\n                          value={values._id}\n                          onChange={(e, values) =>\n                            productChange(e, values, setFieldValue)\n                          }\n                          label='Select Product'\n                        >\n                          <MenuItem value=''>\n                            <em>Select</em>\n                          </MenuItem>\n                          {props.products.map((product, i) => {\n                            return (\n                              <MenuItem key={product._id} value={product._id}>\n                                {product.name}\n                              </MenuItem>\n                            )\n                          })}\n                        </Select>\n                      </FormControl>\n                    </FormGroup>\n                  </Box>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <Field\n                        //error={touched.username && Boolean(errors.username)}\n                        type='number'\n                        value={values.price}\n                        name='price'\n                        label='Price'\n                        variant='outlined'\n                        as={TextField}\n                        //helperText={touched.username && errors.username}\n                      />\n                    </FormGroup>\n                  </Box>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                      <Field\n                        error={Boolean(errors.availableStock)}\n                        helperText={errors.availableStock}\n                        type='number'\n                        name='availableStock'\n                        label='Available'\n                        variant='outlined'\n                        value={values.availableStock}\n                        as={TextField}\n                        readOnly={true}\n                        disabled\n                      />\n                    </FormGroup>\n                  </Box>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                    <Field\n                        error={touched.quantity && Boolean(errors.quantity)}\n                        helperText={touched.quantity && errors.quantity}\n                        type='number'\n                        name='quantity'\n                        label='Quantity'\n                        variant='outlined'\n                        value={values.quantity}\n                        as={TextField}\n                        disabled={!Boolean(values.availableStock)}\n                      />\n                    </FormGroup>\n                  </Box>\n                  <Box marginBottom={2}>\n                    <FormGroup>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          type='button'\n                          className='formik-formBill-addProBtn'\n                          disabled={!Boolean(values.availableStock)}\n                          onClick={(e)=>addToBillList(e,values,setFieldValue)}\n                        >\n                        Add to Bill\n                      </Button>\n                    </FormGroup>\n                  </Box>\n                </div>\n                <div>\n                  {(!Boolean(errors.products) ) && <p style={{color:'red'}}>{errors.products}</p>}\n                  {values.products.length>0 && (\n                        <Fragment>\n                          <h3>Billing Cart</h3>\n                          <Tabular \n                            data={values.products} \n                            values={values} \n                            setFieldValue={setFieldValue} \n                            handleRemoveProduct={handleRemoveProduct}\n                          />\n  {/* --------------------------Billing form ----------------------------------------------*/}\n                          <div className='formik-formBill-makeBill'>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    //error={touched.email && Boolean(errors.email)}\n                                    //helperText={touched.email && errors.email}\n                                    type='date'\n                                    name='date'\n                                    label='Date'\n                                    variant='outlined'\n                                    value={values.date}\n                                    as={TextField}\n                                  />\n                                </FormGroup>\n                              </Box>\n                              <Box marginBottom={2}>\n                              <FormGroup>\n                                <FormControl variant='outlined'>\n                                  <InputLabel id='selectCustomer'>\n                                    Select Customer\n                                  </InputLabel>\n                                  <Select\n                                    error={touched.customer && Boolean(errors.customer)}\n                                    //helperText={touched.customer && errors.customer}\n                                    className='formBill-formik-select'\n                                    labelId='selectCustomer'\n                                    name='customer'\n                                    value={values.customer}\n                                    label='Select Customer'\n                                    onChange={handleChange}\n                                  >\n                                    <MenuItem value=''>\n                                      <em>Select</em>\n                                    </MenuItem>\n                                    {props.customers.map((customer, i) => {\n                                      return (\n                                        <MenuItem key={customer._id} value={customer._id}>\n                                          {customer.name}\n                                        </MenuItem>\n                                      )\n                                    })}\n                                  </Select>\n                                </FormControl>\n                              </FormGroup>\n                            </Box>\n                            <Modal \n                                style={modalStyles}\n                                isOpen={modalIsOpen}\n                                // onAfterOpen={this.afterOpenModal}\n                                onRequestClose={modalStatus}\n                                aria-labelledBy=\"Create Category\"\n                                aria-describedBy=\"simple-modal-description\"\n                            >\n                                <CustomerAdd \n                                    modalStatus={modalStatus}\n                                />\n                            </Modal>\n                            <IconButton className='makeBill-add-cus-btn' onClick={modalStatus}>\n                                <Tooltip title='Add Customer' placement='top'>\n                                  <Add />\n                                </Tooltip>\n                            </IconButton>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    //error={touched.email && Boolean(errors.email)}\n                                    //helperText={touched.email && errors.email}\n                                    type='text'\n                                    name='description'\n                                    label='Description'\n                                    variant='outlined'\n                                    value={values.description}\n                                    as={TextField}\n                                  />\n                                </FormGroup>\n                              </Box>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    error={Boolean(errors.tax)}\n                                    helperText={errors.tax}\n                                    type='number'\n                                    name='tax'\n                                    label='Tax'\n                                    variant='outlined'\n                                    value={values.tax}\n                                    as={TextField}\n                                    onBlur={() => {taxBlur(values,setFieldValue)}}\n                                  />\n                                </FormGroup>\n                              </Box>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    //error={touched.email && Boolean(errors.email)}\n                                    //helperText={touched.email && errors.email}\n                                    type='number'\n                                    name='total'\n                                    label='Total'\n                                    variant='outlined'\n                                    value={values.total}\n                                    as={TextField}\n                                  />\n                                </FormGroup>\n                              </Box>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    error={touched.discount && Boolean(errors.discount)}\n                                    helperText={touched.discount && errors.discount}\n                                    type='number'\n                                    name='discount'\n                                    label='Discount'\n                                    variant='outlined'\n                                    value={values.discount}\n                                    as={TextField}\n                                    onBlur={() => discountBlur(values,setFieldValue)}\n                                  />\n                                </FormGroup>\n                              </Box>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    error={touched.otherCharges && Boolean(errors.otherCharges)}\n                                    helperText={touched.otherCharges && errors.otherCharges}\n                                    type='number'\n                                    name='otherCharges'\n                                    label='OtherCharges'\n                                    variant='outlined'\n                                    value={values.otherCharges}\n                                    as={TextField}\n                                    onBlur={() => otherChargesBlur(values,setFieldValue)}\n                                  />\n                                </FormGroup>\n                              </Box>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    //error={touched.email && Boolean(errors.email)}\n                                    //helperText={touched.email && errors.email}\n                                    type='number'\n                                    name='totalAmount'\n                                    label='Total Amount'\n                                    variant='outlined'\n                                    value={values.totalAmount}\n                                    as={TextField}\n                                  />\n                                </FormGroup>\n                              </Box>\n                              <Box marginBottom={2}>\n                              <FormGroup>\n                                <FormControl variant='outlined'>\n                                  <InputLabel id='payment'>\n                                    Payment Mode\n                                  </InputLabel>\n                                  <Select\n                                    error={Boolean(errors.payMode)}\n                                    //helperText={errors.payMode}\n                                    className='formBill-formik-select'\n                                    labelId='payment'\n                                    name='payMode'\n                                    value={values.payMode}\n                                    label='Select Customer'\n                                    onChange={handleChange}\n                                  >\n                                    <MenuItem value=''>\n                                      <em>Select</em>\n                                    </MenuItem>\n                                    {['Net-Banking', 'Cash', 'UPI', 'Cheque'].map((pay, i) => {\n                                      return (\n                                        <MenuItem key={i} value={pay}>\n                                          {pay}\n                                        </MenuItem>\n                                      )\n                                    })}\n                                  </Select>\n                                </FormControl>\n                              </FormGroup>\n                            </Box>\n                            <Box marginBottom={2}>\n                                <FormGroup>\n                                <Field\n                                    //error={touched.email && Boolean(errors.email)}\n                                    //helperText={touched.email && errors.email}\n                                    type='text'\n                                    name='paymentDetails'\n                                    label='Payment Details'\n                                    variant='outlined'\n                                    value={values.paymentDetails}\n                                    as={TextField}\n                                  />\n                                </FormGroup>\n                              </Box>\n                          </div>\n                          <div className='formik-formBill-makeBillAction'>\n                              <Button \n                                  variant='contained'\n                                  color='primary'\n                                  type='reset'\n                                  //className='btn-register'\n                                  className='formik-formBill-submit-btn' \n                                  onClick={() => resetForm()}\n                                  >Clear</Button>\n                                <Button \n                                  variant='contained'\n                                  color='primary'\n                                  type='submit'\n                                  //className='btn-register'\n                                  disabled={isSubmitting}\n                                  className='formik-formBill-submit-btn' \n                                >Bill</Button>\n                          </div>\n                      </Fragment>\n                    )\n                  }\n                </div>\n                {/* <pre>{JSON.stringify(values, null, 4)}</pre>\n                <pre>{JSON.stringify(isSubmitting, null, 4)}</pre>\n                <pre>{JSON.stringify(errors, null, 4)}</pre>\n                <pre>{JSON.stringify(isValid, null, 4)}</pre> */}\n              </Form>\n            </div>\n          </Fragment>\n        )}\n      </Formik>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    customers: state.customers,\n    stocks: state.stocks,\n  }\n}\n\nexport default connect(mapStateToProps)(FormBill)\n"]},"metadata":{},"sourceType":"module"}