{"ast":null,"code":"import axios from '../config/axios';\nimport Swal from 'sweetalert2';\n\nconst getExpenditureTypes = expenditureTypes => {\n  return {\n    type: 'EXPENDITURE_TYPE_LIST',\n    payload: expenditureTypes\n  };\n};\n\nconst addExpenditureType = expenditureType => {\n  return {\n    type: 'ADD_EXPENDITURE_TYPE',\n    payload: expenditureType\n  };\n};\n\nexport const getExpenditureTypeList = () => {\n  return dispatch => {\n    axios.get('/expenditureTypes').then(response => {\n      // console.log(response)\n      if (response.data) {\n        dispatch(getExpenditureTypes(response.data));\n      }\n    }).catch(err => {\n      console.log('error expenditureType', err); // history.push('/')\n    });\n  };\n};\nexport const startAddExpenditureType = data => {\n  return dispatch => {\n    axios.post(`/expenditureTypes`, data, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(res => {\n      if (res.data.errors) {\n        Swal.fire({\n          type: 'error',\n          text: \"Check the fileds\"\n        });\n      } else {\n        dispatch(addExpenditureType(res.data));\n      }\n    }).catch(err => {\n      Swal.fire({\n        type: 'error',\n        text: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Rubi Singh/meanstark/nodeexpress/billing/my-app/src/actions/expenditureType.js"],"names":["axios","Swal","getExpenditureTypes","expenditureTypes","type","payload","addExpenditureType","expenditureType","getExpenditureTypeList","dispatch","get","then","response","data","catch","err","console","log","startAddExpenditureType","post","headers","localStorage","getItem","res","errors","fire","text"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,mBAAmB,GAAIC,gBAAD,IAAsB;AAC9C,SAAO;AACHC,IAAAA,IAAI,EAAE,uBADH;AAC4BC,IAAAA,OAAO,EAAEF;AADrC,GAAP;AAGH,CAJD;;AAKA,MAAMG,kBAAkB,GAAIC,eAAD,IAAmB;AAC1C,SAAO;AACHH,IAAAA,IAAI,EAAE,sBADH;AAC0BC,IAAAA,OAAO,EAAEE;AADnC,GAAP;AAGH,CAJD;;AAKA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AACxC,SAAQC,QAAD,IAAc;AACjBT,IAAAA,KAAK,CAACU,GAAN,CAAU,mBAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA,UAAIA,QAAQ,CAACC,IAAb,EAAmB;AACfJ,QAAAA,QAAQ,CAACP,mBAAmB,CAACU,QAAQ,CAACC,IAAV,CAApB,CAAR;AACH;AACJ,KANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC,EADU,CAEV;AACH,KAVL;AAWH,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMG,uBAAuB,GAAIL,IAAD,IAAU;AAC7C,SAAQJ,QAAD,IAAc;AACjBT,IAAAA,KAAK,CAACmB,IAAN,CAAY,mBAAZ,EAA+BN,IAA/B,EAAoC;AAChCO,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADL;AADuB,KAApC,EAKCX,IALD,CAKMY,GAAG,IAAI;AACT,UAAGA,GAAG,CAACV,IAAJ,CAASW,MAAZ,EAAmB;AACfvB,QAAAA,IAAI,CAACwB,IAAL,CAAU;AACNrB,UAAAA,IAAI,EAAE,OADA;AAENsB,UAAAA,IAAI,EAAE;AAFA,SAAV;AAIH,OALD,MAKK;AACDjB,QAAAA,QAAQ,CAACH,kBAAkB,CAACiB,GAAG,CAACV,IAAL,CAAnB,CAAR;AACH;AACJ,KAdD,EAeCC,KAfD,CAeOC,GAAG,IAAI;AACVd,MAAAA,IAAI,CAACwB,IAAL,CAAU;AACNrB,QAAAA,IAAI,EAAE,OADA;AAENsB,QAAAA,IAAI,EAAEX;AAFA,OAAV;AAKH,KArBD;AAsBH,GAvBD;AAwBH,CAzBM","sourcesContent":["import axios from '../config/axios'\nimport Swal from 'sweetalert2'\n\nconst getExpenditureTypes = (expenditureTypes) => {\n    return {\n        type: 'EXPENDITURE_TYPE_LIST', payload: expenditureTypes\n    }\n}\nconst addExpenditureType = (expenditureType)=>{\n    return {\n        type: 'ADD_EXPENDITURE_TYPE',payload: expenditureType\n    }\n}\nexport const getExpenditureTypeList = () => {\n    return (dispatch) => {\n        axios.get('/expenditureTypes')\n            .then(response => {\n                // console.log(response)\n                if (response.data) {\n                    dispatch(getExpenditureTypes(response.data))\n                }\n            })\n            .catch(err => {\n                console.log('error expenditureType', err)\n                // history.push('/')\n            })\n    }\n}\n\nexport const startAddExpenditureType = (data) => {\n    return (dispatch) => {\n        axios.post(`/expenditureTypes`,data,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(res => {\n            if(res.data.errors){\n                Swal.fire({\n                    type: 'error',\n                    text: \"Check the fileds\"\n                })\n            }else{\n                dispatch(addExpenditureType(res.data))\n            }\n        })\n        .catch(err => {\n            Swal.fire({\n                type: 'error',\n                text: err\n            })\n            \n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}